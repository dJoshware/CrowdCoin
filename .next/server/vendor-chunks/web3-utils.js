"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/web3-utils";
exports.ids = ["vendor-chunks/web3-utils"];
exports.modules = {

/***/ "(rsc)/./node_modules/web3-utils/lib/esm/chunk_response_parser.js":
/*!******************************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/chunk_response_parser.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChunkResponseParser: () => (/* binding */ ChunkResponseParser)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(rsc)/./node_modules/web3-errors/lib/esm/index.js\");\n\nclass ChunkResponseParser {\n    constructor(eventEmitter, autoReconnect) {\n        this.eventEmitter = eventEmitter;\n        this.autoReconnect = autoReconnect;\n        this.chunkTimeout = 1000 * 15;\n    }\n    clearQueues() {\n        if (typeof this._clearQueues === 'function') {\n            this._clearQueues();\n        }\n    }\n    onError(clearQueues) {\n        this._clearQueues = clearQueues;\n    }\n    parseResponse(data) {\n        const returnValues = [];\n        // DE-CHUNKER\n        const dechunkedData = data\n            .replace(/\\}[\\n\\r]?\\{/g, '}|--|{') // }{\n            .replace(/\\}\\][\\n\\r]?\\[\\{/g, '}]|--|[{') // }][{\n            .replace(/\\}[\\n\\r]?\\[\\{/g, '}|--|[{') // }[{\n            .replace(/\\}\\][\\n\\r]?\\{/g, '}]|--|{') // }]{\n            .split('|--|');\n        dechunkedData.forEach(_chunkData => {\n            // prepend the last chunk\n            let chunkData = _chunkData;\n            if (this.lastChunk) {\n                chunkData = this.lastChunk + chunkData;\n            }\n            let result;\n            try {\n                result = JSON.parse(chunkData);\n            }\n            catch (e) {\n                this.lastChunk = chunkData;\n                // start timeout to cancel all requests\n                if (this.lastChunkTimeout) {\n                    clearTimeout(this.lastChunkTimeout);\n                }\n                this.lastChunkTimeout = setTimeout(() => {\n                    if (this.autoReconnect)\n                        return;\n                    this.clearQueues();\n                    this.eventEmitter.emit('error', new web3_errors__WEBPACK_IMPORTED_MODULE_0__.InvalidResponseError({\n                        id: 1,\n                        jsonrpc: '2.0',\n                        error: { code: 2, message: 'Chunk timeout' },\n                    }));\n                }, this.chunkTimeout);\n                return;\n            }\n            // cancel timeout and set chunk to null\n            clearTimeout(this.lastChunkTimeout);\n            this.lastChunk = undefined;\n            if (result)\n                returnValues.push(result);\n        });\n        return returnValues;\n    }\n}\n//# sourceMappingURL=chunk_response_parser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL2NodW5rX3Jlc3BvbnNlX3BhcnNlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFtRDtBQUM1QztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsU0FBUyxNQUFNLEtBQUs7QUFDNUMsd0JBQXdCLGFBQWEsTUFBTSxPQUFPLE9BQU87QUFDekQsd0JBQXdCLFdBQVcsTUFBTSxNQUFNLE9BQU87QUFDdEQsd0JBQXdCLFdBQVcsTUFBTSxNQUFNLE9BQU87QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELDZEQUFvQjtBQUM1RTtBQUNBO0FBQ0EsaUNBQWlDLG1DQUFtQztBQUNwRSxxQkFBcUI7QUFDckIsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvanVpY2VlbGxpc2gvRnVsbC1TdGFjay1EZXZlbG9wbWVudC9CbG9ja2NoYWluL1Byb2plY3RzL0NhbXBhaWduL25vZGVfbW9kdWxlcy93ZWIzLXV0aWxzL2xpYi9lc20vY2h1bmtfcmVzcG9uc2VfcGFyc2VyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEludmFsaWRSZXNwb25zZUVycm9yIH0gZnJvbSAnd2ViMy1lcnJvcnMnO1xuZXhwb3J0IGNsYXNzIENodW5rUmVzcG9uc2VQYXJzZXIge1xuICAgIGNvbnN0cnVjdG9yKGV2ZW50RW1pdHRlciwgYXV0b1JlY29ubmVjdCkge1xuICAgICAgICB0aGlzLmV2ZW50RW1pdHRlciA9IGV2ZW50RW1pdHRlcjtcbiAgICAgICAgdGhpcy5hdXRvUmVjb25uZWN0ID0gYXV0b1JlY29ubmVjdDtcbiAgICAgICAgdGhpcy5jaHVua1RpbWVvdXQgPSAxMDAwICogMTU7XG4gICAgfVxuICAgIGNsZWFyUXVldWVzKCkge1xuICAgICAgICBpZiAodHlwZW9mIHRoaXMuX2NsZWFyUXVldWVzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICB0aGlzLl9jbGVhclF1ZXVlcygpO1xuICAgICAgICB9XG4gICAgfVxuICAgIG9uRXJyb3IoY2xlYXJRdWV1ZXMpIHtcbiAgICAgICAgdGhpcy5fY2xlYXJRdWV1ZXMgPSBjbGVhclF1ZXVlcztcbiAgICB9XG4gICAgcGFyc2VSZXNwb25zZShkYXRhKSB7XG4gICAgICAgIGNvbnN0IHJldHVyblZhbHVlcyA9IFtdO1xuICAgICAgICAvLyBERS1DSFVOS0VSXG4gICAgICAgIGNvbnN0IGRlY2h1bmtlZERhdGEgPSBkYXRhXG4gICAgICAgICAgICAucmVwbGFjZSgvXFx9W1xcblxccl0/XFx7L2csICd9fC0tfHsnKSAvLyB9e1xuICAgICAgICAgICAgLnJlcGxhY2UoL1xcfVxcXVtcXG5cXHJdP1xcW1xcey9nLCAnfV18LS18W3snKSAvLyB9XVt7XG4gICAgICAgICAgICAucmVwbGFjZSgvXFx9W1xcblxccl0/XFxbXFx7L2csICd9fC0tfFt7JykgLy8gfVt7XG4gICAgICAgICAgICAucmVwbGFjZSgvXFx9XFxdW1xcblxccl0/XFx7L2csICd9XXwtLXx7JykgLy8gfV17XG4gICAgICAgICAgICAuc3BsaXQoJ3wtLXwnKTtcbiAgICAgICAgZGVjaHVua2VkRGF0YS5mb3JFYWNoKF9jaHVua0RhdGEgPT4ge1xuICAgICAgICAgICAgLy8gcHJlcGVuZCB0aGUgbGFzdCBjaHVua1xuICAgICAgICAgICAgbGV0IGNodW5rRGF0YSA9IF9jaHVua0RhdGE7XG4gICAgICAgICAgICBpZiAodGhpcy5sYXN0Q2h1bmspIHtcbiAgICAgICAgICAgICAgICBjaHVua0RhdGEgPSB0aGlzLmxhc3RDaHVuayArIGNodW5rRGF0YTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxldCByZXN1bHQ7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHJlc3VsdCA9IEpTT04ucGFyc2UoY2h1bmtEYXRhKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5sYXN0Q2h1bmsgPSBjaHVua0RhdGE7XG4gICAgICAgICAgICAgICAgLy8gc3RhcnQgdGltZW91dCB0byBjYW5jZWwgYWxsIHJlcXVlc3RzXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMubGFzdENodW5rVGltZW91dCkge1xuICAgICAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGhpcy5sYXN0Q2h1bmtUaW1lb3V0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhpcy5sYXN0Q2h1bmtUaW1lb3V0ID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmF1dG9SZWNvbm5lY3QpXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY2xlYXJRdWV1ZXMoKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5ldmVudEVtaXR0ZXIuZW1pdCgnZXJyb3InLCBuZXcgSW52YWxpZFJlc3BvbnNlRXJyb3Ioe1xuICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IDEsXG4gICAgICAgICAgICAgICAgICAgICAgICBqc29ucnBjOiAnMi4wJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiB7IGNvZGU6IDIsIG1lc3NhZ2U6ICdDaHVuayB0aW1lb3V0JyB9LFxuICAgICAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgICAgfSwgdGhpcy5jaHVua1RpbWVvdXQpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIGNhbmNlbCB0aW1lb3V0IGFuZCBzZXQgY2h1bmsgdG8gbnVsbFxuICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRoaXMubGFzdENodW5rVGltZW91dCk7XG4gICAgICAgICAgICB0aGlzLmxhc3RDaHVuayA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIGlmIChyZXN1bHQpXG4gICAgICAgICAgICAgICAgcmV0dXJuVmFsdWVzLnB1c2gocmVzdWx0KTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiByZXR1cm5WYWx1ZXM7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2h1bmtfcmVzcG9uc2VfcGFyc2VyLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/web3-utils/lib/esm/chunk_response_parser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/web3-utils/lib/esm/converters.js":
/*!*******************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/converters.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   asciiToHex: () => (/* binding */ asciiToHex),\n/* harmony export */   bytesToHex: () => (/* binding */ bytesToHex),\n/* harmony export */   bytesToUint8Array: () => (/* binding */ bytesToUint8Array),\n/* harmony export */   ethUnitMap: () => (/* binding */ ethUnitMap),\n/* harmony export */   fromAscii: () => (/* binding */ fromAscii),\n/* harmony export */   fromDecimal: () => (/* binding */ fromDecimal),\n/* harmony export */   fromUtf8: () => (/* binding */ fromUtf8),\n/* harmony export */   fromWei: () => (/* binding */ fromWei),\n/* harmony export */   hexToAscii: () => (/* binding */ hexToAscii),\n/* harmony export */   hexToBytes: () => (/* binding */ hexToBytes),\n/* harmony export */   hexToNumber: () => (/* binding */ hexToNumber),\n/* harmony export */   hexToNumberString: () => (/* binding */ hexToNumberString),\n/* harmony export */   hexToString: () => (/* binding */ hexToString),\n/* harmony export */   hexToUtf8: () => (/* binding */ hexToUtf8),\n/* harmony export */   numberToHex: () => (/* binding */ numberToHex),\n/* harmony export */   stringToHex: () => (/* binding */ stringToHex),\n/* harmony export */   toAscii: () => (/* binding */ toAscii),\n/* harmony export */   toBigInt: () => (/* binding */ toBigInt),\n/* harmony export */   toBool: () => (/* binding */ toBool),\n/* harmony export */   toChecksumAddress: () => (/* binding */ toChecksumAddress),\n/* harmony export */   toDecimal: () => (/* binding */ toDecimal),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   toNumber: () => (/* binding */ toNumber),\n/* harmony export */   toUtf8: () => (/* binding */ toUtf8),\n/* harmony export */   toWei: () => (/* binding */ toWei),\n/* harmony export */   utf8ToBytes: () => (/* binding */ utf8ToBytes),\n/* harmony export */   utf8ToHex: () => (/* binding */ utf8ToHex)\n/* harmony export */ });\n/* harmony import */ var ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethereum-cryptography/keccak.js */ \"(rsc)/./node_modules/web3-utils/node_modules/ethereum-cryptography/esm/keccak.js\");\n/* harmony import */ var ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethereum-cryptography/utils.js */ \"(rsc)/./node_modules/web3-utils/node_modules/ethereum-cryptography/esm/utils.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-validator */ \"(rsc)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-errors */ \"(rsc)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _uint8array_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./uint8array.js */ \"(rsc)/./node_modules/web3-utils/lib/esm/uint8array.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @module Utils\n */\n\n\n\n\n\n// Ref: https://ethdocs.org/en/latest/ether.html\n// Note: this could be simplified using ** operator, but babel does not handle it well (https://github.com/babel/babel/issues/13109)\n/** @internal */\nconst ethUnitMap = {\n    noether: BigInt(0),\n    wei: BigInt(1),\n    kwei: BigInt(1000),\n    Kwei: BigInt(1000),\n    babbage: BigInt(1000),\n    femtoether: BigInt(1000),\n    mwei: BigInt(1000000),\n    Mwei: BigInt(1000000),\n    lovelace: BigInt(1000000),\n    picoether: BigInt(1000000),\n    gwei: BigInt(1000000000),\n    Gwei: BigInt(1000000000),\n    shannon: BigInt(1000000000),\n    nanoether: BigInt(1000000000),\n    nano: BigInt(1000000000),\n    szabo: BigInt(1000000000000),\n    microether: BigInt(1000000000000),\n    micro: BigInt(1000000000000),\n    finney: BigInt(1000000000000000),\n    milliether: BigInt(1000000000000000),\n    milli: BigInt(1000000000000000),\n    ether: BigInt('1000000000000000000'),\n    kether: BigInt('1000000000000000000000'),\n    grand: BigInt('1000000000000000000000'),\n    mether: BigInt('1000000000000000000000000'),\n    gether: BigInt('1000000000000000000000000000'),\n    tether: BigInt('1000000000000000000000000000000'),\n};\nconst PrecisionLossWarning = 'Warning: Using type `number` with values that are large or contain many decimals may cause loss of precision, it is recommended to use type `string` or `BigInt` when using conversion methods';\n/**\n * Convert a value from bytes to Uint8Array\n * @param data - Data to be converted\n * @returns - The Uint8Array representation of the input data\n *\n * @example\n * ```ts\n * console.log(web3.utils.bytesToUint8Array(\"0xab\")));\n * > Uint8Array(1) [ 171 ]\n * ```\n */\nconst bytesToUint8Array = (data) => {\n    web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate(['bytes'], [data]);\n    if ((0,_uint8array_js__WEBPACK_IMPORTED_MODULE_4__.isUint8Array)(data)) {\n        return data;\n    }\n    if (Array.isArray(data)) {\n        return new Uint8Array(data);\n    }\n    if (typeof data === 'string') {\n        return web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.hexToUint8Array(data);\n    }\n    throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidBytesError(data);\n};\n/**\n * @internal\n */\nconst { uint8ArrayToHexString } = web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils;\n/**\n * Convert a byte array to a hex string\n * @param bytes - Byte array to be converted\n * @returns - The hex string representation of the input byte array\n *\n * @example\n * ```ts\n * console.log(web3.utils.bytesToHex(new Uint8Array([72, 12])));\n * > \"0x480c\"\n *\n */\nconst bytesToHex = (bytes) => uint8ArrayToHexString(bytesToUint8Array(bytes));\n/**\n * Convert a hex string to a byte array\n * @param hex - Hex string to be converted\n * @returns - The byte array representation of the input hex string\n *\n * @example\n * ```ts\n * console.log(web3.utils.hexToBytes('0x74657374'));\n * > Uint8Array(4) [ 116, 101, 115, 116 ]\n * ```\n */\nconst hexToBytes = (bytes) => {\n    if (typeof bytes === 'string' && bytes.slice(0, 2).toLowerCase() !== '0x') {\n        return bytesToUint8Array(`0x${bytes}`);\n    }\n    return bytesToUint8Array(bytes);\n};\n/**\n * Converts value to it's number representation\n * @param value - Hex string to be converted\n * @returns - The number representation of the input value\n *\n * @example\n * ```ts\n * conoslle.log(web3.utils.hexToNumber('0xa'));\n * > 10\n * ```\n */\nconst hexToNumber = (value) => {\n    web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate(['hex'], [value]);\n    // To avoid duplicate code and circular dependency we will\n    // use `hexToNumber` implementation from `web3-validator`\n    return web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.hexToNumber(value);\n};\n/**\n * Converts value to it's number representation @alias `hexToNumber`\n */\nconst toDecimal = hexToNumber;\n/**\n * Converts value to it's hex representation\n * @param value - Value to be converted\n * @param hexstrict - Add padding to converted value if odd, to make it hexstrict\n * @returns - The hex representation of the input value\n *\n * @example\n * ```ts\n * console.log(web3.utils.numberToHex(10));\n * > \"0xa\"\n * ```\n */\nconst numberToHex = (value, hexstrict) => {\n    if (typeof value !== 'bigint')\n        web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate(['int'], [value]);\n    // To avoid duplicate code and circular dependency we will\n    // use `numberToHex` implementation from `web3-validator`\n    let updatedValue = web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.numberToHex(value);\n    if (hexstrict) {\n        if (!updatedValue.startsWith('-') && updatedValue.length % 2 === 1) {\n            // To avoid duplicate a circular dependency we will not be using the padLeft method\n            updatedValue = '0x0'.concat(updatedValue.slice(2));\n        }\n        else if (updatedValue.length % 2 === 0 && updatedValue.startsWith('-'))\n            updatedValue = '-0x0'.concat(updatedValue.slice(3));\n    }\n    return updatedValue;\n};\n/**\n * Converts value to it's hex representation @alias `numberToHex`\n *\n */\nconst fromDecimal = numberToHex;\n/**\n * Converts value to it's decimal representation in string\n * @param value - Hex string to be converted\n * @returns - The decimal representation of the input value\n *\n * @example\n * ```ts\n * console.log(web3.utils.hexToNumberString('0xa'));\n * > \"10\"\n * ```\n */\nconst hexToNumberString = (data) => hexToNumber(data).toString();\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n * @param str - Utf8 string to be converted\n * @returns - The hex representation of the input string\n *\n * @example\n * ```ts\n * console.log(utf8ToHex('web3.js'));\n * > \"0x776562332e6a73\"\n * ```\n *\n */\nconst utf8ToHex = (str) => {\n    web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate(['string'], [str]);\n    // To be compatible with 1.x trim null character\n    // eslint-disable-next-line no-control-regex\n    let strWithoutNullCharacter = str.replace(/^(?:\\u0000)/, '');\n    // eslint-disable-next-line no-control-regex\n    strWithoutNullCharacter = strWithoutNullCharacter.replace(/(?:\\u0000)$/, '');\n    return bytesToHex(new TextEncoder().encode(strWithoutNullCharacter));\n};\n/**\n * @alias utf8ToHex\n */\nconst fromUtf8 = utf8ToHex;\n/**\n * @alias utf8ToHex\n */\nconst stringToHex = utf8ToHex;\n/**\n * Should be called to get utf8 from it's hex representation\n * @param str - Hex string to be converted\n * @returns - Utf8 string\n *\n * @example\n * ```ts\n * console.log(web3.utils.hexToUtf8('0x48656c6c6f20576f726c64'));\n * > Hello World\n * ```\n */\nconst hexToUtf8 = (str) => (0,ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__.bytesToUtf8)(hexToBytes(str));\n/**\n * @alias hexToUtf8\n */\nconst toUtf8 = (input) => {\n    if (typeof input === 'string') {\n        return hexToUtf8(input);\n    }\n    web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate(['bytes'], [input]);\n    return (0,ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__.bytesToUtf8)(input);\n};\nconst utf8ToBytes = ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes;\n/**\n * @alias hexToUtf8\n */\nconst hexToString = hexToUtf8;\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n * @param str - String to be converted to hex\n * @returns - Hex string\n *\n * @example\n * ```ts\n * console.log(web3.utils.asciiToHex('Hello World'));\n * > 0x48656c6c6f20576f726c64\n * ```\n */\nconst asciiToHex = (str) => {\n    web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate(['string'], [str]);\n    let hexString = '';\n    for (let i = 0; i < str.length; i += 1) {\n        const hexCharCode = str.charCodeAt(i).toString(16);\n        // might need a leading 0\n        hexString += hexCharCode.length % 2 !== 0 ? `0${hexCharCode}` : hexCharCode;\n    }\n    return `0x${hexString}`;\n};\n/**\n * @alias asciiToHex\n */\nconst fromAscii = asciiToHex;\n/**\n * Should be called to get ascii from it's hex representation\n * @param str - Hex string to be converted to ascii\n * @returns - Ascii string\n *\n * @example\n * ```ts\n * console.log(web3.utils.hexToAscii('0x48656c6c6f20576f726c64'));\n * > Hello World\n * ```\n */\nconst hexToAscii = (str) => {\n    const decoder = new TextDecoder('ascii');\n    return decoder.decode(hexToBytes(str));\n};\n/**\n * @alias hexToAscii\n */\nconst toAscii = hexToAscii;\n/**\n * Auto converts any given value into it's hex representation.\n * @param value - Value to be converted to hex\n * @param returnType - If true, it will return the type of the value\n *\n * @example\n * ```ts\n * console.log(web3.utils.toHex(10));\n * > 0xa\n *\n * console.log(web3.utils.toHex('0x123', true));\n * > bytes\n *```\n */\nconst toHex = (value, returnType) => {\n    if (typeof value === 'string' && (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isAddress)(value)) {\n        return returnType ? 'address' : `0x${value.toLowerCase().replace(/^0x/i, '')}`;\n    }\n    if (typeof value === 'boolean') {\n        // eslint-disable-next-line no-nested-ternary\n        return returnType ? 'bool' : value ? '0x01' : '0x00';\n    }\n    if (typeof value === 'number') {\n        // eslint-disable-next-line no-nested-ternary\n        return returnType ? (value < 0 ? 'int256' : 'uint256') : numberToHex(value);\n    }\n    if (typeof value === 'bigint') {\n        return returnType ? 'bigint' : numberToHex(value);\n    }\n    if ((0,_uint8array_js__WEBPACK_IMPORTED_MODULE_4__.isUint8Array)(value)) {\n        return returnType ? 'bytes' : bytesToHex(value);\n    }\n    if (typeof value === 'object' && !!value) {\n        return returnType ? 'string' : utf8ToHex(JSON.stringify(value));\n    }\n    if (typeof value === 'string') {\n        if (value.startsWith('-0x') || value.startsWith('-0X')) {\n            return returnType ? 'int256' : numberToHex(value);\n        }\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHexStrict)(value)) {\n            return returnType ? 'bytes' : value;\n        }\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHex)(value) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isInt)(value) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isUInt)(value)) {\n            return returnType ? 'bytes' : `0x${value}`;\n        }\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHex)(value) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isInt)(value) && (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isUInt)(value)) {\n            // This condition seems problematic because meeting\n            // both conditions `!isInt(value) && isUInt(value)` should be impossible.\n            // But a value pass for those conditions: \"101611154195520776335741463917853444671577865378275924493376429267637792638729\"\n            // Note that according to the docs: it is supposed to be treated as a string (https://docs.web3js.org/guides/web3_upgrade_guide/x/web3_utils_migration_guide#conversion-to-hex)\n            // In short, the strange is that isInt(value) is false but isUInt(value) is true for the value above.\n            // TODO: isUInt(value) should be investigated.\n            // However, if `toHex('101611154195520776335741463917853444671577865378275924493376429267637792638729', true)` is called, it will return `true`.\n            // But, if `toHex('101611154195520776335741463917853444671577865378275924493376429267637792638729')` is called, it will throw inside `numberToHex`.\n            return returnType ? 'uint' : numberToHex(value);\n        }\n        if (!Number.isFinite(value)) {\n            return returnType ? 'string' : utf8ToHex(value);\n        }\n    }\n    throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.HexProcessingError(value);\n};\n/**\n * Converts any given value into it's number representation, if possible, else into it's bigint representation.\n * @param value - The value to convert\n * @returns - Returns the value in number or bigint representation\n *\n * @example\n * ```ts\n * console.log(web3.utils.toNumber(1));\n * > 1\n * console.log(web3.utils.toNumber(Number.MAX_SAFE_INTEGER));\n * > 9007199254740991\n *\n * console.log(web3.utils.toNumber(BigInt(Number.MAX_SAFE_INTEGER)));\n * > 9007199254740991\n *\n * console.log(web3.utils.toNumber(BigInt(Number.MAX_SAFE_INTEGER) + BigInt(1)));\n * > 9007199254740992n\n *\n * ```\n */\nconst toNumber = (value) => {\n    if (typeof value === 'number') {\n        if (value > 1e20) {\n            console.warn(PrecisionLossWarning);\n            // JavaScript converts numbers >= 10^21 to scientific notation when coerced to strings,\n            // leading to potential parsing errors and incorrect representations.\n            // For instance, String(10000000000000000000000) yields '1e+22'.\n            // Using BigInt prevents this\n            return BigInt(value);\n        }\n        return value;\n    }\n    if (typeof value === 'bigint') {\n        return value >= Number.MIN_SAFE_INTEGER && value <= Number.MAX_SAFE_INTEGER\n            ? Number(value)\n            : value;\n    }\n    if (typeof value === 'string' && (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHexStrict)(value)) {\n        return hexToNumber(value);\n    }\n    try {\n        return toNumber(BigInt(value));\n    }\n    catch (_a) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidNumberError(value);\n    }\n};\n/**\n * Auto converts any given value into it's bigint representation\n *\n * @param value - The value to convert\n * @returns - Returns the value in bigint representation\n\n * @example\n * ```ts\n * console.log(web3.utils.toBigInt(1));\n * > 1n\n * ```\n */\nconst toBigInt = (value) => {\n    if (typeof value === 'number') {\n        return BigInt(value);\n    }\n    if (typeof value === 'bigint') {\n        return value;\n    }\n    // isHex passes for dec, too\n    if (typeof value === 'string' && (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHex)(value)) {\n        if (value.startsWith('-')) {\n            return -BigInt(value.substring(1));\n        }\n        return BigInt(value);\n    }\n    throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidNumberError(value);\n};\n/**\n * Takes a number of wei and converts it to any other ether unit.\n * @param number - The value in wei\n * @param unit - The unit to convert to\n * @returns - Returns the converted value in the given unit\n *\n * @example\n * ```ts\n * console.log(web3.utils.fromWei(\"1\", \"ether\"));\n * > 0.000000000000000001\n *\n * console.log(web3.utils.fromWei(\"1\", \"shannon\"));\n * > 0.000000001\n * ```\n */\nconst fromWei = (number, unit) => {\n    let denomination;\n    if (typeof unit === 'string') {\n        denomination = ethUnitMap[unit];\n        if (!denomination) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidUnitError(unit);\n        }\n    }\n    else {\n        if (unit < 0 || !Number.isInteger(unit)) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidIntegerError(unit);\n        }\n        denomination = (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.bigintPower)(BigInt(10), BigInt(unit));\n    }\n    // value in wei would always be integer\n    // 13456789, 1234\n    const value = String(toNumber(number));\n    // count number of zeros in denomination\n    // 1000000 -> 6\n    const numberOfZerosInDenomination = denomination.toString().length - 1;\n    if (numberOfZerosInDenomination <= 0) {\n        return value.toString();\n    }\n    // pad the value with required zeros\n    // 13456789 -> 13456789, 1234 -> 001234\n    const zeroPaddedValue = value.padStart(numberOfZerosInDenomination, '0');\n    // get the integer part of value by counting number of zeros from start\n    // 13456789 -> '13'\n    // 001234 -> ''\n    const integer = zeroPaddedValue.slice(0, -numberOfZerosInDenomination);\n    // get the fraction part of value by counting number of zeros backward\n    // 13456789 -> '456789'\n    // 001234 -> '001234'\n    const fraction = zeroPaddedValue.slice(-numberOfZerosInDenomination).replace(/\\.?0+$/, '');\n    if (integer === '') {\n        return fraction ? `0.${fraction}` : '0';\n    }\n    if (fraction === '') {\n        return integer;\n    }\n    const updatedValue = `${integer}.${fraction}`;\n    return updatedValue.slice(0, integer.length + numberOfZerosInDenomination + 1);\n};\n/**\n * Takes a number of a unit and converts it to wei.\n *\n * @param number - The number to convert.\n * @param unit - {@link EtherUnits} The unit of the number passed.\n * @returns The number converted to wei.\n *\n * @example\n * ```ts\n * console.log(web3.utils.toWei(\"0.001\", \"ether\"));\n * > 1000000000000000 //(wei)\n * ```\n */\n// todo in 1.x unit defaults to 'ether'\nconst toWei = (number, unit) => {\n    web3_validator__WEBPACK_IMPORTED_MODULE_2__.validator.validate(['number'], [number]);\n    let denomination;\n    if (typeof unit === 'string') {\n        denomination = ethUnitMap[unit];\n        if (!denomination) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidUnitError(unit);\n        }\n    }\n    else {\n        if (unit < 0 || !Number.isInteger(unit)) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidIntegerError(unit);\n        }\n        denomination = (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.bigintPower)(BigInt(10), BigInt(unit));\n    }\n    let parsedNumber = number;\n    if (typeof parsedNumber === 'number') {\n        if (parsedNumber < 1e-15) {\n            console.warn(PrecisionLossWarning);\n        }\n        if (parsedNumber > 1e20) {\n            console.warn(PrecisionLossWarning);\n            parsedNumber = BigInt(parsedNumber);\n        }\n        else {\n            // in case there is a decimal point, we need to convert it to string\n            parsedNumber = parsedNumber.toLocaleString('fullwide', {\n                useGrouping: false,\n                maximumFractionDigits: 20,\n            });\n        }\n    }\n    // if value is decimal e.g. 24.56 extract `integer` and `fraction` part\n    // to avoid `fraction` to be null use `concat` with empty string\n    const [integer, fraction] = String(typeof parsedNumber === 'string' && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHexStrict)(parsedNumber)\n        ? parsedNumber\n        : toNumber(parsedNumber))\n        .split('.')\n        .concat('');\n    // join the value removing `.` from\n    // 24.56 -> 2456\n    const value = BigInt(`${integer}${fraction}`);\n    // multiply value with denomination\n    // 2456 * 1000000 -> 2456000000\n    const updatedValue = value * denomination;\n    // check if whole number was passed in\n    const decimals = fraction.length;\n    if (decimals === 0) {\n        return updatedValue.toString();\n    }\n    // trim the value to remove extra zeros\n    return updatedValue.toString().slice(0, -decimals);\n};\n/**\n * Will convert an upper or lowercase Ethereum address to a checksum address.\n * @param address - An address string\n * @returns\tThe checksum address\n * @example\n * ```ts\n * web3.utils.toChecksumAddress('0xc1912fee45d61c87cc5ea59dae31190fffff232d');\n * > \"0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d\"\n * ```\n */\nconst toChecksumAddress = (address) => {\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isAddress)(address, false)) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidAddressError(address);\n    }\n    const lowerCaseAddress = address.toLowerCase().replace(/^0x/i, '');\n    // calling `Uint8Array.from` because `noble-hashes` checks with `instanceof Uint8Array` that fails in some edge cases:\n    // \thttps://github.com/paulmillr/noble-hashes/issues/25#issuecomment-1750106284\n    const hash = web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.uint8ArrayToHexString((0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.ensureIfUint8Array(utf8ToBytes(lowerCaseAddress))));\n    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(hash) ||\n        hash === '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470')\n        return ''; // // EIP-1052 if hash is equal to c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470, keccak was given empty data\n    let checksumAddress = '0x';\n    const addressHash = hash.replace(/^0x/i, '');\n    for (let i = 0; i < lowerCaseAddress.length; i += 1) {\n        // If ith character is 8 to f then make it uppercase\n        if (parseInt(addressHash[i], 16) > 7) {\n            checksumAddress += lowerCaseAddress[i].toUpperCase();\n        }\n        else {\n            checksumAddress += lowerCaseAddress[i];\n        }\n    }\n    return checksumAddress;\n};\nconst toBool = (value) => {\n    if (typeof value === 'boolean') {\n        return value;\n    }\n    if (typeof value === 'number' && (value === 0 || value === 1)) {\n        return Boolean(value);\n    }\n    if (typeof value === 'bigint' && (value === BigInt(0) || value === BigInt(1))) {\n        return Boolean(value);\n    }\n    if (typeof value === 'string' &&\n        !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHexStrict)(value) &&\n        (value === '1' || value === '0' || value === 'false' || value === 'true')) {\n        if (value === 'true') {\n            return true;\n        }\n        if (value === 'false') {\n            return false;\n        }\n        return Boolean(Number(value));\n    }\n    if (typeof value === 'string' && (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isHexStrict)(value) && (value === '0x1' || value === '0x0')) {\n        return Boolean(toNumber(value));\n    }\n    throw new web3_errors__WEBPACK_IMPORTED_MODULE_3__.InvalidBooleanError(value);\n};\n//# sourceMappingURL=converters.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/web3-utils/lib/esm/converters.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/web3-utils/lib/esm/event_emitter.js":
/*!**********************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/event_emitter.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventEmitter: () => (/* binding */ EventEmitter)\n/* harmony export */ });\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! eventemitter3 */ \"(rsc)/./node_modules/eventemitter3/index.mjs\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/* eslint-disable max-classes-per-file */\n\n/**\n * This class copy the behavior of Node.js EventEmitter class.\n * It is used to provide the same interface for the browser environment.\n */\nclass EventEmitter extends eventemitter3__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super(...arguments);\n        // must be defined for backwards compatibility\n        this.maxListeners = Number.MAX_SAFE_INTEGER;\n    }\n    setMaxListeners(maxListeners) {\n        this.maxListeners = maxListeners;\n        return this;\n    }\n    getMaxListeners() {\n        return this.maxListeners;\n    }\n}\n//# sourceMappingURL=event_emitter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL2V2ZW50X2VtaXR0ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDTywyQkFBMkIscURBQWE7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2p1aWNlZWxsaXNoL0Z1bGwtU3RhY2stRGV2ZWxvcG1lbnQvQmxvY2tjaGFpbi9Qcm9qZWN0cy9DYW1wYWlnbi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL2V2ZW50X2VtaXR0ZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG4vKiBlc2xpbnQtZGlzYWJsZSBtYXgtY2xhc3Nlcy1wZXItZmlsZSAqL1xuaW1wb3J0IEV2ZW50RW1pdHRlcjMgZnJvbSAnZXZlbnRlbWl0dGVyMyc7XG4vKipcbiAqIFRoaXMgY2xhc3MgY29weSB0aGUgYmVoYXZpb3Igb2YgTm9kZS5qcyBFdmVudEVtaXR0ZXIgY2xhc3MuXG4gKiBJdCBpcyB1c2VkIHRvIHByb3ZpZGUgdGhlIHNhbWUgaW50ZXJmYWNlIGZvciB0aGUgYnJvd3NlciBlbnZpcm9ubWVudC5cbiAqL1xuZXhwb3J0IGNsYXNzIEV2ZW50RW1pdHRlciBleHRlbmRzIEV2ZW50RW1pdHRlcjMge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICAvLyBtdXN0IGJlIGRlZmluZWQgZm9yIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5XG4gICAgICAgIHRoaXMubWF4TGlzdGVuZXJzID0gTnVtYmVyLk1BWF9TQUZFX0lOVEVHRVI7XG4gICAgfVxuICAgIHNldE1heExpc3RlbmVycyhtYXhMaXN0ZW5lcnMpIHtcbiAgICAgICAgdGhpcy5tYXhMaXN0ZW5lcnMgPSBtYXhMaXN0ZW5lcnM7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBnZXRNYXhMaXN0ZW5lcnMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm1heExpc3RlbmVycztcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ldmVudF9lbWl0dGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/web3-utils/lib/esm/event_emitter.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/web3-utils/lib/esm/formatter.js":
/*!******************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/formatter.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convert: () => (/* binding */ convert),\n/* harmony export */   convertScalarValue: () => (/* binding */ convertScalarValue),\n/* harmony export */   format: () => (/* binding */ format),\n/* harmony export */   isDataFormat: () => (/* binding */ isDataFormat)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(rsc)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-types */ \"(rsc)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-validator */ \"(rsc)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _converters_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./converters.js */ \"(rsc)/./node_modules/web3-utils/lib/esm/converters.js\");\n/* harmony import */ var _objects_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./objects.js */ \"(rsc)/./node_modules/web3-utils/lib/esm/objects.js\");\n/* harmony import */ var _string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./string_manipulation.js */ \"(rsc)/./node_modules/web3-utils/lib/esm/string_manipulation.js\");\n/* harmony import */ var _uint8array_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./uint8array.js */ \"(rsc)/./node_modules/web3-utils/lib/esm/uint8array.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n\n\n\n\n\nconst { parseBaseType } = web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils;\nconst isDataFormat = (dataFormat) => typeof dataFormat === 'object' &&\n    !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(dataFormat) &&\n    'number' in dataFormat &&\n    'bytes' in dataFormat;\n/**\n * Finds the schema that corresponds to a specific data path within a larger JSON schema.\n * It works by iterating over the dataPath array and traversing the JSON schema one step at a time until it reaches the end of the path.\n *\n * @param schema - represents a JSON schema, which is an object that describes the structure of JSON data\n * @param dataPath - represents an array of strings that specifies the path to the data within the JSON schema\n * @param oneOfPath - represents an optional array of two-element tuples that specifies the \"oneOf\" option to choose, if the schema has oneOf and the data path can match multiple subschemas\n * @returns the JSON schema that matches the data path\n *\n */\nconst findSchemaByDataPath = (schema, dataPath, oneOfPath = []) => {\n    let result = Object.assign({}, schema);\n    let previousDataPath;\n    for (const dataPart of dataPath) {\n        if (result.oneOf && previousDataPath) {\n            const currentDataPath = previousDataPath;\n            const path = oneOfPath.find(([key]) => key === currentDataPath);\n            if (path && path[0] === previousDataPath) {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n                result = result.oneOf[path[1]];\n            }\n        }\n        if (!result.properties && !result.items) {\n            return undefined;\n        }\n        if (result.properties) {\n            result = result.properties[dataPart];\n        }\n        else if (result.items && result.items.properties) {\n            const node = result.items.properties;\n            result = node[dataPart];\n        }\n        else if (result.items && (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isObject)(result.items)) {\n            result = result.items;\n        }\n        else if (result.items && Array.isArray(result.items)) {\n            result = result.items[parseInt(dataPart, 10)];\n        }\n        if (result && dataPart)\n            previousDataPath = dataPart;\n    }\n    return result;\n};\n/**\n * Converts a value depending on the format\n * @param value - value to convert\n * @param ethType - The type of the value to be parsed\n * @param format - The format to be converted to\n * @returns - The value converted to the specified format\n */\nconst convertScalarValue = (value, ethType, format) => {\n    try {\n        const { baseType, baseTypeSize } = parseBaseType(ethType);\n        if (baseType === 'int' || baseType === 'uint') {\n            switch (format.number) {\n                case web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_NUMBER.NUMBER:\n                    return Number((0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.toBigInt)(value));\n                case web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_NUMBER.HEX:\n                    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.numberToHex)((0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.toBigInt)(value));\n                case web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_NUMBER.STR:\n                    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.toBigInt)(value).toString();\n                case web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_NUMBER.BIGINT:\n                    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.toBigInt)(value);\n                default:\n                    throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.FormatterError(`Invalid format: ${String(format.number)}`);\n            }\n        }\n        if (baseType === 'bytes') {\n            let paddedValue;\n            if (baseTypeSize) {\n                if (typeof value === 'string')\n                    paddedValue = (0,_string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__.padLeft)(value, baseTypeSize * 2);\n                else if ((0,_uint8array_js__WEBPACK_IMPORTED_MODULE_6__.isUint8Array)(value)) {\n                    paddedValue = (0,_uint8array_js__WEBPACK_IMPORTED_MODULE_6__.uint8ArrayConcat)(new Uint8Array(baseTypeSize - value.length), value);\n                }\n            }\n            else {\n                paddedValue = value;\n            }\n            switch (format.bytes) {\n                case web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_BYTES.HEX:\n                    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.bytesToHex)((0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.bytesToUint8Array)(paddedValue));\n                case web3_types__WEBPACK_IMPORTED_MODULE_1__.FMT_BYTES.UINT8ARRAY:\n                    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_3__.bytesToUint8Array)(paddedValue);\n                default:\n                    throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.FormatterError(`Invalid format: ${String(format.bytes)}`);\n            }\n        }\n        if (baseType === 'string') {\n            return String(value);\n        }\n    }\n    catch (error) {\n        // If someone didn't use `eth` keyword we can return original value\n        // as the scope of this code is formatting not validation\n        return value;\n    }\n    return value;\n};\nconst convertArray = ({ value, schemaProp, schema, object, key, dataPath, format, oneOfPath = [], }) => {\n    var _a, _b;\n    // If value is an array\n    if (Array.isArray(value)) {\n        let _schemaProp = schemaProp;\n        // TODO This is a naive approach to solving the issue of\n        // a schema using oneOf. This chunk of code was intended to handle\n        // BlockSchema.transactions\n        // TODO BlockSchema.transactions are not being formatted\n        if ((schemaProp === null || schemaProp === void 0 ? void 0 : schemaProp.oneOf) !== undefined) {\n            // The following code is basically saying:\n            // if the schema specifies oneOf, then we are to loop\n            // over each possible schema and check if they type of the schema\n            // matches the type of value[0], and if so we use the oneOfSchemaProp\n            // as the schema for formatting\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n            schemaProp.oneOf.forEach((oneOfSchemaProp, index) => {\n                var _a, _b;\n                if (!Array.isArray(schemaProp === null || schemaProp === void 0 ? void 0 : schemaProp.items) &&\n                    ((typeof value[0] === 'object' &&\n                        ((_a = oneOfSchemaProp === null || oneOfSchemaProp === void 0 ? void 0 : oneOfSchemaProp.items) === null || _a === void 0 ? void 0 : _a.type) === 'object') ||\n                        (typeof value[0] === 'string' &&\n                            ((_b = oneOfSchemaProp === null || oneOfSchemaProp === void 0 ? void 0 : oneOfSchemaProp.items) === null || _b === void 0 ? void 0 : _b.type) !== 'object'))) {\n                    _schemaProp = oneOfSchemaProp;\n                    oneOfPath.push([key, index]);\n                }\n            });\n        }\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(_schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items)) {\n            // Can not find schema for array item, delete that item\n            // eslint-disable-next-line no-param-reassign\n            delete object[key];\n            dataPath.pop();\n            return true;\n        }\n        // If schema for array items is a single type\n        if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isObject)(_schemaProp.items) && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(_schemaProp.items.format)) {\n            for (let i = 0; i < value.length; i += 1) {\n                // eslint-disable-next-line no-param-reassign\n                object[key][i] = convertScalarValue(value[i], \n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n                (_a = _schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items) === null || _a === void 0 ? void 0 : _a.format, format);\n            }\n            dataPath.pop();\n            return true;\n        }\n        // If schema for array items is an object\n        if (!Array.isArray(_schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items) && ((_b = _schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items) === null || _b === void 0 ? void 0 : _b.type) === 'object') {\n            for (const arrObject of value) {\n                // eslint-disable-next-line no-use-before-define\n                convert(arrObject, schema, dataPath, format, oneOfPath);\n            }\n            dataPath.pop();\n            return true;\n        }\n        // If schema for array is a tuple\n        if (Array.isArray(_schemaProp === null || _schemaProp === void 0 ? void 0 : _schemaProp.items)) {\n            for (let i = 0; i < value.length; i += 1) {\n                // eslint-disable-next-line no-param-reassign\n                object[key][i] = convertScalarValue(value[i], _schemaProp.items[i].format, format);\n            }\n            dataPath.pop();\n            return true;\n        }\n    }\n    return false;\n};\n/**\n * Converts the data to the specified format\n * @param data - data to convert\n * @param schema - The JSON schema that describes the structure of the data\n * @param dataPath - A string array that specifies the path to the data within the JSON schema\n * @param format  - The format to be converted to\n * @param oneOfPath - An optional array of two-element tuples that specifies the \"oneOf\" option to choose, if the schema has oneOf and the data path can match multiple subschemas\n * @returns - The data converted to the specified format\n */\nconst convert = (data, schema, dataPath, format, oneOfPath = []) => {\n    var _a;\n    // If it's a scalar value\n    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isObject)(data) && !Array.isArray(data)) {\n        return convertScalarValue(data, schema === null || schema === void 0 ? void 0 : schema.format, format);\n    }\n    const object = data;\n    // case when schema is array and `items` is object\n    if (Array.isArray(object) &&\n        (schema === null || schema === void 0 ? void 0 : schema.type) === 'array' &&\n        ((_a = schema === null || schema === void 0 ? void 0 : schema.items) === null || _a === void 0 ? void 0 : _a.type) === 'object') {\n        convertArray({\n            value: object,\n            schemaProp: schema,\n            schema,\n            object,\n            key: '',\n            dataPath,\n            format,\n            oneOfPath,\n        });\n    }\n    else {\n        for (const [key, value] of Object.entries(object)) {\n            dataPath.push(key);\n            let schemaProp = findSchemaByDataPath(schema, dataPath, oneOfPath);\n            // If value is a scaler value\n            if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isNullish)(schemaProp)) {\n                delete object[key];\n                dataPath.pop();\n                continue;\n            }\n            // If value is an object, recurse into it\n            if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isObject)(value)) {\n                convert(value, schema, dataPath, format, oneOfPath);\n                dataPath.pop();\n                continue;\n            }\n            // If value is an array\n            if (convertArray({\n                value,\n                schemaProp,\n                schema,\n                object,\n                key,\n                dataPath,\n                format,\n                oneOfPath,\n            })) {\n                continue;\n            }\n            // The following code is basically saying:\n            // if the schema specifies oneOf, then we are to loop\n            // over each possible schema and check if they type of the schema specifies format\n            // and if so we use the oneOfSchemaProp as the schema for formatting\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n            if ((schemaProp === null || schemaProp === void 0 ? void 0 : schemaProp.format) === undefined && (schemaProp === null || schemaProp === void 0 ? void 0 : schemaProp.oneOf) !== undefined) {\n                for (const [_index, oneOfSchemaProp] of schemaProp.oneOf.entries()) {\n                    if ((oneOfSchemaProp === null || oneOfSchemaProp === void 0 ? void 0 : oneOfSchemaProp.format) !== undefined) {\n                        schemaProp = oneOfSchemaProp;\n                        break;\n                    }\n                }\n            }\n            object[key] = convertScalarValue(value, schemaProp.format, format);\n            dataPath.pop();\n        }\n    }\n    return object;\n};\n/**\n * Given data that can be interpreted according to the provided schema, returns equivalent data that has been formatted\n * according to the provided return format.\n *\n * @param schema - how to interpret the data\n * @param data - data to be formatted\n * @param returnFormat - how to format the data\n * @returns - formatted data\n *\n * @example\n *\n * ```js\n * import { FMT_NUMBER, utils } from \"web3\";\n *\n * console.log(\n *   utils.format({ format: \"uint\" }, \"221\", { number: FMT_NUMBER.HEX }),\n * );\n * // 0xdd\n * ```\n *\n */\nconst format = (schema, data, returnFormat = web3_types__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_RETURN_FORMAT) => {\n    let dataToParse;\n    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isObject)(data)) {\n        dataToParse = (0,_objects_js__WEBPACK_IMPORTED_MODULE_4__.mergeDeep)({}, data);\n    }\n    else if (Array.isArray(data)) {\n        dataToParse = [...data];\n    }\n    else {\n        dataToParse = data;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const jsonSchema = (0,web3_validator__WEBPACK_IMPORTED_MODULE_2__.isObject)(schema) ? schema : web3_validator__WEBPACK_IMPORTED_MODULE_2__.utils.ethAbiToJsonSchema(schema);\n    if (!jsonSchema.properties && !jsonSchema.items && !jsonSchema.format) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.FormatterError('Invalid json schema for formatting');\n    }\n    return convert(dataToParse, jsonSchema, [], returnFormat);\n};\n//# sourceMappingURL=formatter.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/web3-utils/lib/esm/formatter.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/web3-utils/lib/esm/hash.js":
/*!*************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/hash.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodePacked: () => (/* binding */ encodePacked),\n/* harmony export */   getStorageSlotNumForLongString: () => (/* binding */ getStorageSlotNumForLongString),\n/* harmony export */   keccak256: () => (/* binding */ keccak256Wrapper),\n/* harmony export */   keccak256Wrapper: () => (/* binding */ keccak256Wrapper),\n/* harmony export */   processSolidityEncodePackedArgs: () => (/* binding */ processSolidityEncodePackedArgs),\n/* harmony export */   sha3: () => (/* binding */ sha3),\n/* harmony export */   sha3Raw: () => (/* binding */ sha3Raw),\n/* harmony export */   soliditySha3: () => (/* binding */ soliditySha3),\n/* harmony export */   soliditySha3Raw: () => (/* binding */ soliditySha3Raw)\n/* harmony export */ });\n/* harmony import */ var ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethereum-cryptography/keccak.js */ \"(rsc)/./node_modules/web3-utils/node_modules/ethereum-cryptography/esm/keccak.js\");\n/* harmony import */ var ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethereum-cryptography/utils.js */ \"(rsc)/./node_modules/web3-utils/node_modules/ethereum-cryptography/esm/utils.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-errors */ \"(rsc)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! web3-validator */ \"(rsc)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _converters_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./converters.js */ \"(rsc)/./node_modules/web3-utils/lib/esm/converters.js\");\n/* harmony import */ var _string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./string_manipulation.js */ \"(rsc)/./node_modules/web3-utils/lib/esm/string_manipulation.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * This package provides utility functions for Ethereum dapps and other web3.js packages.\n *\n * For using Utils functions, first install Web3 package using `npm i web3` or `yarn add web3`.\n * After that, Web3 Utils functions will be available as mentioned below.\n * ```ts\n * import { Web3 } from 'web3';\n * const web3 = new Web3();\n *\n * const value = web3.utils.fromWei(\"1\", \"ether\")\n *\n * ```\n *\n * For using individual package install `web3-utils` package using `npm i web3-utils` or `yarn add web3-utils` and only import required functions.\n * This is more efficient approach for building lightweight applications.\n * ```ts\n * import { fromWei, soliditySha3Raw } from 'web3-utils';\n *\n * console.log(fromWei(\"1\", \"ether\"));\n * console.log(soliditySha3Raw({ type: \"string\", value: \"helloworld\" }))\n *\n * ```\n * @module Utils\n */\n\n\n\n\n\n\nconst SHA3_EMPTY_BYTES = '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\n/**\n * A wrapper for ethereum-cryptography/keccak256 to allow hashing a `string` and a `bigint` in addition to `UInt8Array`\n * @param data - the input to hash\n * @returns - the Keccak-256 hash of the input\n *\n * @example\n * ```ts\n * console.log(web3.utils.keccak256Wrapper('web3.js'));\n * > 0x63667efb1961039c9bb0d6ea7a5abdd223a3aca7daa5044ad894226e1f83919a\n *\n * console.log(web3.utils.keccak256Wrapper(1));\n * > 0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n *\n * console.log(web3.utils.keccak256Wrapper(0xaf12fd));\n * > 0x358640fd4719fa923525d74ab5ae80a594301aba5543e3492b052bf4598b794c\n * ```\n */\nconst keccak256Wrapper = (data) => {\n    let processedData;\n    if (typeof data === 'bigint' || typeof data === 'number') {\n        processedData = (0,ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)(data.toString());\n    }\n    else if (Array.isArray(data)) {\n        processedData = new Uint8Array(data);\n    }\n    else if (typeof data === 'string' && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(data)) {\n        processedData = (0,ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)(data);\n    }\n    else {\n        processedData = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.bytesToUint8Array)(data);\n    }\n    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.bytesToHex)((0,ethereum_cryptography_keccak_js__WEBPACK_IMPORTED_MODULE_0__.keccak256)(web3_validator__WEBPACK_IMPORTED_MODULE_3__.utils.ensureIfUint8Array(processedData)));\n};\n\n/**\n * computes the Keccak-256 hash of the input and returns a hexstring\n * @param data - the input to hash\n * @returns - the Keccak-256 hash of the input\n *\n * @example\n * ```ts\n * console.log(web3.utils.sha3('web3.js'));\n * > 0x63667efb1961039c9bb0d6ea7a5abdd223a3aca7daa5044ad894226e1f83919a\n *\n * console.log(web3.utils.sha3(''));\n * > undefined\n * ```\n */\nconst sha3 = (data) => {\n    let updatedData;\n    if (typeof data === 'string') {\n        if (data.startsWith('0x') && (0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isHexStrict)(data)) {\n            updatedData = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.hexToBytes)(data);\n        }\n        else {\n            updatedData = (0,ethereum_cryptography_utils_js__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes)(data);\n        }\n    }\n    else {\n        updatedData = data;\n    }\n    const hash = keccak256Wrapper(updatedData);\n    // EIP-1052 if hash is equal to c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470, keccak was given empty data\n    return hash === SHA3_EMPTY_BYTES ? undefined : hash;\n};\n/**\n * Will calculate the sha3 of the input but does return the hash value instead of null if for example a empty string is passed.\n * @param data - the input to hash\n * @returns - the Keccak-256 hash of the input\n *\n * @example\n * ```ts\n * conosle.log(web3.utils.sha3Raw('web3.js'));\n * > 0x63667efb1961039c9bb0d6ea7a5abdd223a3aca7daa5044ad894226e1f83919a\n *\n * console.log(web3.utils.sha3Raw(''));\n * > 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\n * ```\n */\nconst sha3Raw = (data) => {\n    const hash = sha3(data);\n    if ((0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isNullish)(hash)) {\n        return SHA3_EMPTY_BYTES;\n    }\n    return hash;\n};\n/**\n * returns type and value\n * @param arg - the input to return the type and value\n * @returns - the type and value of the input\n */\nconst getType = (arg) => {\n    if (Array.isArray(arg)) {\n        throw new Error('Autodetection of array types is not supported.');\n    }\n    let type;\n    let value;\n    // if type is given\n    if (typeof arg === 'object' &&\n        ('t' in arg || 'type' in arg) &&\n        ('v' in arg || 'value' in arg)) {\n        type = 't' in arg ? arg.t : arg.type;\n        value = 'v' in arg ? arg.v : arg.value;\n        type = type.toLowerCase() === 'bigint' ? 'int' : type;\n    }\n    else if (typeof arg === 'bigint') {\n        return ['int', arg];\n    }\n    // otherwise try to guess the type\n    else {\n        type = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.toHex)(arg, true);\n        value = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.toHex)(arg);\n        if (!type.startsWith('int') && !type.startsWith('uint')) {\n            type = 'bytes';\n        }\n    }\n    if ((type.startsWith('int') || type.startsWith('uint')) &&\n        typeof value === 'string' &&\n        !/^(-)?0x/i.test(value)) {\n        value = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.toBigInt)(value);\n    }\n    return [type, value];\n};\n/**\n * returns the type with size if uint or int\n * @param name - the input to return the type with size\n * @returns - the type with size of the input\n */\nconst elementaryName = (name) => {\n    if (name.startsWith('int[')) {\n        return `int256${name.slice(3)}`;\n    }\n    if (name === 'int') {\n        return 'int256';\n    }\n    if (name.startsWith('uint[')) {\n        return `uint256'${name.slice(4)}`;\n    }\n    if (name === 'uint') {\n        return 'uint256';\n    }\n    return name;\n};\n/**\n * returns the size of the value of type 'byte'\n */\nconst parseTypeN = (value, typeLength) => {\n    const typesize = /^(\\d+).*$/.exec(value.slice(typeLength));\n    return typesize ? parseInt(typesize[1], 10) : 0;\n};\n/**\n * returns the bit length of the value\n * @param value - the input to return the bit length\n * @returns - the bit length of the input\n */\nconst bitLength = (value) => {\n    const updatedVal = value.toString(2);\n    return updatedVal.length;\n};\n/**\n * Pads the value based on size and type\n * returns a string of the padded value\n * @param type - the input to pad\n * @returns = the padded value\n */\nconst solidityPack = (type, val) => {\n    const value = val.toString();\n    if (type === 'string') {\n        if (typeof val === 'string')\n            return (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.utf8ToHex)(val);\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidStringError(val);\n    }\n    if (type === 'bool' || type === 'boolean') {\n        if (typeof val === 'boolean')\n            return val ? '01' : '00';\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidBooleanError(val);\n    }\n    if (type === 'address') {\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_3__.isAddress)(value)) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidAddressError(value);\n        }\n        return value;\n    }\n    const name = elementaryName(type);\n    if (type.startsWith('uint')) {\n        const size = parseTypeN(name, 'uint'.length);\n        if (size % 8 || size < 8 || size > 256) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidSizeError(value);\n        }\n        const num = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.toNumber)(value);\n        if (bitLength(num) > size) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidLargeValueError(value);\n        }\n        if (num < BigInt(0)) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidUnsignedIntegerError(value);\n        }\n        return size ? (0,_string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__.leftPad)(num.toString(16), (size / 8) * 2) : num.toString(16);\n    }\n    if (type.startsWith('int')) {\n        const size = parseTypeN(name, 'int'.length);\n        if (size % 8 || size < 8 || size > 256) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidSizeError(type);\n        }\n        const num = (0,_converters_js__WEBPACK_IMPORTED_MODULE_4__.toNumber)(value);\n        if (bitLength(num) > size) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidLargeValueError(value);\n        }\n        if (num < BigInt(0)) {\n            return (0,_string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__.toTwosComplement)(num.toString(), (size / 8) * 2);\n        }\n        return size ? (0,_string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__.leftPad)(num.toString(16), size / 4) : num.toString(16);\n    }\n    if (name === 'bytes') {\n        if (value.replace(/^0x/i, '').length % 2 !== 0) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidBytesError(value);\n        }\n        return value;\n    }\n    if (type.startsWith('bytes')) {\n        if (value.replace(/^0x/i, '').length % 2 !== 0) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidBytesError(value);\n        }\n        const size = parseTypeN(type, 'bytes'.length);\n        if (!size || size < 1 || size > 64 || size < value.replace(/^0x/i, '').length / 2) {\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_2__.InvalidBytesError(value);\n        }\n        return (0,_string_manipulation_js__WEBPACK_IMPORTED_MODULE_5__.rightPad)(value, size * 2);\n    }\n    return '';\n};\n/**\n * returns a string of the tightly packed value given based on the type\n * @param arg - the input to return the tightly packed value\n * @returns - the tightly packed value\n */\nconst processSolidityEncodePackedArgs = (arg) => {\n    const [type, val] = getType(arg);\n    // array case\n    if (Array.isArray(val)) {\n        // go through each element of the array and use map function to create new hexarg list\n        const hexArg = val.map((v) => solidityPack(type, v).replace('0x', ''));\n        return hexArg.join('');\n    }\n    const hexArg = solidityPack(type, val);\n    return hexArg.replace('0x', '');\n};\n/**\n * Encode packed arguments to a hexstring\n */\nconst encodePacked = (...values) => {\n    const hexArgs = values.map(processSolidityEncodePackedArgs);\n    return `0x${hexArgs.join('').toLowerCase()}`;\n};\n/**\n * Will tightly pack values given in the same way solidity would then hash.\n * returns a hash string, or null if input is empty\n * @param values - the input to return the tightly packed values\n * @returns - the keccack246 of the tightly packed values\n *\n * @example\n * ```ts\n * console.log(web3.utils.soliditySha3({ type: \"string\", value: \"31323334\" }));\n * > 0xf15f8da2ad27e486d632dc37d24912f634398918d6f9913a0a0ff84e388be62b\n * ```\n */\nconst soliditySha3 = (...values) => sha3(encodePacked(...values));\n/**\n * Will tightly pack values given in the same way solidity would then hash.\n * returns a hash string, if input is empty will return `0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470`\n * @param values - the input to return the tightly packed values\n * @returns - the keccack246 of the tightly packed values\n *\n * @example\n * ```ts\n * console.log(web3.utils.soliditySha3Raw({ type: \"string\", value: \"helloworld\" }))\n * > 0xfa26db7ca85ead399216e7c6316bc50ed24393c3122b582735e7f3b0f91b93f0\n * ```\n */\nconst soliditySha3Raw = (...values) => sha3Raw(encodePacked(...values));\n/**\n * Get slot number for storage long string in contract. Basically for getStorage method\n * returns slotNumber where will data placed\n * @param mainSlotNumber - the slot number where will be stored hash of long string\n * @returns - the slot number where will be stored long string\n */\nconst getStorageSlotNumForLongString = (mainSlotNumber) => sha3(`0x${(typeof mainSlotNumber === 'number'\n    ? mainSlotNumber.toString()\n    : mainSlotNumber).padStart(64, '0')}`);\n//# sourceMappingURL=hash.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/web3-utils/lib/esm/hash.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/web3-utils/lib/esm/index.js":
/*!**************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChunkResponseParser: () => (/* reexport safe */ _chunk_response_parser_js__WEBPACK_IMPORTED_MODULE_11__.ChunkResponseParser),\n/* harmony export */   Eip1193Provider: () => (/* reexport safe */ _web3_eip1193_provider_js__WEBPACK_IMPORTED_MODULE_13__.Eip1193Provider),\n/* harmony export */   EventEmitter: () => (/* reexport safe */ _event_emitter_js__WEBPACK_IMPORTED_MODULE_1__.EventEmitter),\n/* harmony export */   SocketProvider: () => (/* reexport safe */ _socket_provider_js__WEBPACK_IMPORTED_MODULE_14__.SocketProvider),\n/* harmony export */   Web3DeferredPromise: () => (/* reexport safe */ _web3_deferred_promise_js__WEBPACK_IMPORTED_MODULE_10__.Web3DeferredPromise),\n/* harmony export */   asciiToHex: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.asciiToHex),\n/* harmony export */   bytesToHex: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.bytesToHex),\n/* harmony export */   bytesToUint8Array: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.bytesToUint8Array),\n/* harmony export */   checkAddressCheckSum: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.checkAddressCheckSum),\n/* harmony export */   compareBlockNumbers: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.compareBlockNumbers),\n/* harmony export */   convert: () => (/* reexport safe */ _formatter_js__WEBPACK_IMPORTED_MODULE_3__.convert),\n/* harmony export */   convertScalarValue: () => (/* reexport safe */ _formatter_js__WEBPACK_IMPORTED_MODULE_3__.convertScalarValue),\n/* harmony export */   encodePacked: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.encodePacked),\n/* harmony export */   ethUnitMap: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.ethUnitMap),\n/* harmony export */   format: () => (/* reexport safe */ _formatter_js__WEBPACK_IMPORTED_MODULE_3__.format),\n/* harmony export */   fromAscii: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.fromAscii),\n/* harmony export */   fromDecimal: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.fromDecimal),\n/* harmony export */   fromTwosComplement: () => (/* reexport safe */ _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__.fromTwosComplement),\n/* harmony export */   fromUtf8: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.fromUtf8),\n/* harmony export */   fromWei: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.fromWei),\n/* harmony export */   getStorageSlotNumForLongString: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.getStorageSlotNumForLongString),\n/* harmony export */   hexToAscii: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.hexToAscii),\n/* harmony export */   hexToBytes: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.hexToBytes),\n/* harmony export */   hexToNumber: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.hexToNumber),\n/* harmony export */   hexToNumberString: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.hexToNumberString),\n/* harmony export */   hexToString: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.hexToString),\n/* harmony export */   hexToUtf8: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.hexToUtf8),\n/* harmony export */   isAddress: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isAddress),\n/* harmony export */   isBatchRequest: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isBatchRequest),\n/* harmony export */   isBatchResponse: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isBatchResponse),\n/* harmony export */   isBloom: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isBloom),\n/* harmony export */   isContractAddressInBloom: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isContractAddressInBloom),\n/* harmony export */   isContractInitOptions: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isContractInitOptions),\n/* harmony export */   isDataFormat: () => (/* reexport safe */ _formatter_js__WEBPACK_IMPORTED_MODULE_3__.isDataFormat),\n/* harmony export */   isHex: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isHex),\n/* harmony export */   isHexStrict: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isHexStrict),\n/* harmony export */   isInBloom: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isInBloom),\n/* harmony export */   isNullish: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isNullish),\n/* harmony export */   isPromise: () => (/* reexport safe */ _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__.isPromise),\n/* harmony export */   isResponseRpcError: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isResponseRpcError),\n/* harmony export */   isResponseWithError: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isResponseWithError),\n/* harmony export */   isResponseWithNotification: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isResponseWithNotification),\n/* harmony export */   isResponseWithResult: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isResponseWithResult),\n/* harmony export */   isSubscriptionResult: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isSubscriptionResult),\n/* harmony export */   isTopic: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isTopic),\n/* harmony export */   isTopicInBloom: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isTopicInBloom),\n/* harmony export */   isUint8Array: () => (/* reexport safe */ _uint8array_js__WEBPACK_IMPORTED_MODULE_15__.isUint8Array),\n/* harmony export */   isUserEthereumAddressInBloom: () => (/* reexport safe */ _validation_js__WEBPACK_IMPORTED_MODULE_2__.isUserEthereumAddressInBloom),\n/* harmony export */   isValidResponse: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.isValidResponse),\n/* harmony export */   jsonRpc: () => (/* reexport module object */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__),\n/* harmony export */   keccak256: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.keccak256),\n/* harmony export */   keccak256Wrapper: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.keccak256Wrapper),\n/* harmony export */   leftPad: () => (/* reexport safe */ _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__.leftPad),\n/* harmony export */   mergeDeep: () => (/* reexport safe */ _objects_js__WEBPACK_IMPORTED_MODULE_7__.mergeDeep),\n/* harmony export */   numberToHex: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.numberToHex),\n/* harmony export */   padLeft: () => (/* reexport safe */ _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__.padLeft),\n/* harmony export */   padRight: () => (/* reexport safe */ _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__.padRight),\n/* harmony export */   pollTillDefined: () => (/* reexport safe */ _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__.pollTillDefined),\n/* harmony export */   pollTillDefinedAndReturnIntervalId: () => (/* reexport safe */ _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__.pollTillDefinedAndReturnIntervalId),\n/* harmony export */   processSolidityEncodePackedArgs: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.processSolidityEncodePackedArgs),\n/* harmony export */   randomBytes: () => (/* reexport safe */ _random_js__WEBPACK_IMPORTED_MODULE_5__.randomBytes),\n/* harmony export */   randomHex: () => (/* reexport safe */ _random_js__WEBPACK_IMPORTED_MODULE_5__.randomHex),\n/* harmony export */   rejectIfConditionAtInterval: () => (/* reexport safe */ _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__.rejectIfConditionAtInterval),\n/* harmony export */   rejectIfTimeout: () => (/* reexport safe */ _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__.rejectIfTimeout),\n/* harmony export */   rightPad: () => (/* reexport safe */ _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__.rightPad),\n/* harmony export */   setRequestIdStart: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.setRequestIdStart),\n/* harmony export */   sha3: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.sha3),\n/* harmony export */   sha3Raw: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.sha3Raw),\n/* harmony export */   soliditySha3: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.soliditySha3),\n/* harmony export */   soliditySha3Raw: () => (/* reexport safe */ _hash_js__WEBPACK_IMPORTED_MODULE_4__.soliditySha3Raw),\n/* harmony export */   stringToHex: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.stringToHex),\n/* harmony export */   toAscii: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toAscii),\n/* harmony export */   toBatchPayload: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.toBatchPayload),\n/* harmony export */   toBigInt: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toBigInt),\n/* harmony export */   toBool: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toBool),\n/* harmony export */   toChecksumAddress: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toChecksumAddress),\n/* harmony export */   toDecimal: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toDecimal),\n/* harmony export */   toHex: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toHex),\n/* harmony export */   toNumber: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toNumber),\n/* harmony export */   toPayload: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.toPayload),\n/* harmony export */   toTwosComplement: () => (/* reexport safe */ _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__.toTwosComplement),\n/* harmony export */   toUtf8: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toUtf8),\n/* harmony export */   toWei: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.toWei),\n/* harmony export */   uint8ArrayConcat: () => (/* reexport safe */ _uint8array_js__WEBPACK_IMPORTED_MODULE_15__.uint8ArrayConcat),\n/* harmony export */   uint8ArrayEquals: () => (/* reexport safe */ _uint8array_js__WEBPACK_IMPORTED_MODULE_15__.uint8ArrayEquals),\n/* harmony export */   utf8ToBytes: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.utf8ToBytes),\n/* harmony export */   utf8ToHex: () => (/* reexport safe */ _converters_js__WEBPACK_IMPORTED_MODULE_0__.utf8ToHex),\n/* harmony export */   uuidV4: () => (/* reexport safe */ _uuid_js__WEBPACK_IMPORTED_MODULE_12__.uuidV4),\n/* harmony export */   validateResponse: () => (/* reexport safe */ _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__.validateResponse),\n/* harmony export */   waitWithTimeout: () => (/* reexport safe */ _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__.waitWithTimeout)\n/* harmony export */ });\n/* harmony import */ var _converters_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./converters.js */ \"(rsc)/./node_modules/web3-utils/lib/esm/converters.js\");\n/* harmony import */ var _event_emitter_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./event_emitter.js */ \"(rsc)/./node_modules/web3-utils/lib/esm/event_emitter.js\");\n/* harmony import */ var _validation_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./validation.js */ \"(rsc)/./node_modules/web3-utils/lib/esm/validation.js\");\n/* harmony import */ var _formatter_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./formatter.js */ \"(rsc)/./node_modules/web3-utils/lib/esm/formatter.js\");\n/* harmony import */ var _hash_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./hash.js */ \"(rsc)/./node_modules/web3-utils/lib/esm/hash.js\");\n/* harmony import */ var _random_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./random.js */ \"(rsc)/./node_modules/web3-utils/lib/esm/random.js\");\n/* harmony import */ var _string_manipulation_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./string_manipulation.js */ \"(rsc)/./node_modules/web3-utils/lib/esm/string_manipulation.js\");\n/* harmony import */ var _objects_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./objects.js */ \"(rsc)/./node_modules/web3-utils/lib/esm/objects.js\");\n/* harmony import */ var _promise_helpers_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./promise_helpers.js */ \"(rsc)/./node_modules/web3-utils/lib/esm/promise_helpers.js\");\n/* harmony import */ var _json_rpc_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./json_rpc.js */ \"(rsc)/./node_modules/web3-utils/lib/esm/json_rpc.js\");\n/* harmony import */ var _web3_deferred_promise_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./web3_deferred_promise.js */ \"(rsc)/./node_modules/web3-utils/lib/esm/web3_deferred_promise.js\");\n/* harmony import */ var _chunk_response_parser_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./chunk_response_parser.js */ \"(rsc)/./node_modules/web3-utils/lib/esm/chunk_response_parser.js\");\n/* harmony import */ var _uuid_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./uuid.js */ \"(rsc)/./node_modules/web3-utils/lib/esm/uuid.js\");\n/* harmony import */ var _web3_eip1193_provider_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./web3_eip1193_provider.js */ \"(rsc)/./node_modules/web3-utils/lib/esm/web3_eip1193_provider.js\");\n/* harmony import */ var _socket_provider_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./socket_provider.js */ \"(rsc)/./node_modules/web3-utils/lib/esm/socket_provider.js\");\n/* harmony import */ var _uint8array_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./uint8array.js */ \"(rsc)/./node_modules/web3-utils/lib/esm/uint8array.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ2dDO0FBQ0c7QUFDSDtBQUNEO0FBQ0w7QUFDRTtBQUNhO0FBQ1o7QUFDUTtBQUNQO0FBQ1c7QUFDRTtBQUNBO0FBQ2pCO0FBQ2lCO0FBQ047QUFDTDtBQUNoQyIsInNvdXJjZXMiOlsiL1VzZXJzL2p1aWNlZWxsaXNoL0Z1bGwtU3RhY2stRGV2ZWxvcG1lbnQvQmxvY2tjaGFpbi9Qcm9qZWN0cy9DYW1wYWlnbi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuZXhwb3J0ICogZnJvbSAnLi9jb252ZXJ0ZXJzLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vZXZlbnRfZW1pdHRlci5qcyc7XG5leHBvcnQgKiBmcm9tICcuL3ZhbGlkYXRpb24uanMnO1xuZXhwb3J0ICogZnJvbSAnLi9mb3JtYXR0ZXIuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9oYXNoLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vcmFuZG9tLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vc3RyaW5nX21hbmlwdWxhdGlvbi5qcyc7XG5leHBvcnQgKiBmcm9tICcuL29iamVjdHMuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9wcm9taXNlX2hlbHBlcnMuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9qc29uX3JwYy5qcyc7XG5leHBvcnQgKiBhcyBqc29uUnBjIGZyb20gJy4vanNvbl9ycGMuanMnO1xuZXhwb3J0ICogZnJvbSAnLi93ZWIzX2RlZmVycmVkX3Byb21pc2UuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9jaHVua19yZXNwb25zZV9wYXJzZXIuanMnO1xuZXhwb3J0ICogZnJvbSAnLi91dWlkLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vd2ViM19laXAxMTkzX3Byb3ZpZGVyLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vc29ja2V0X3Byb3ZpZGVyLmpzJztcbmV4cG9ydCAqIGZyb20gJy4vdWludDhhcnJheS5qcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/web3-utils/lib/esm/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/web3-utils/lib/esm/json_rpc.js":
/*!*****************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/json_rpc.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isBatchRequest: () => (/* binding */ isBatchRequest),\n/* harmony export */   isBatchResponse: () => (/* binding */ isBatchResponse),\n/* harmony export */   isResponseRpcError: () => (/* binding */ isResponseRpcError),\n/* harmony export */   isResponseWithError: () => (/* binding */ isResponseWithError),\n/* harmony export */   isResponseWithNotification: () => (/* binding */ isResponseWithNotification),\n/* harmony export */   isResponseWithResult: () => (/* binding */ isResponseWithResult),\n/* harmony export */   isSubscriptionResult: () => (/* binding */ isSubscriptionResult),\n/* harmony export */   isValidResponse: () => (/* binding */ isValidResponse),\n/* harmony export */   setRequestIdStart: () => (/* binding */ setRequestIdStart),\n/* harmony export */   toBatchPayload: () => (/* binding */ toBatchPayload),\n/* harmony export */   toPayload: () => (/* binding */ toPayload),\n/* harmony export */   validateResponse: () => (/* binding */ validateResponse)\n/* harmony export */ });\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-validator */ \"(rsc)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-errors */ \"(rsc)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _uuid_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./uuid.js */ \"(rsc)/./node_modules/web3-utils/lib/esm/uuid.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n\n// check if code is a valid rpc server error code\nconst isResponseRpcError = (rpcError) => {\n    const errorCode = rpcError.error.code;\n    return web3_errors__WEBPACK_IMPORTED_MODULE_1__.rpcErrorsMap.has(errorCode) || (errorCode >= -32099 && errorCode <= -32000);\n};\nconst isResponseWithResult = (response) => !Array.isArray(response) &&\n    !!response &&\n    response.jsonrpc === '2.0' &&\n    // JSON RPC consider \"null\" as valid response\n    'result' in response &&\n    (0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isNullish)(response.error) &&\n    (typeof response.id === 'number' || typeof response.id === 'string');\n// To avoid circular package dependency, copied to code here. If you update this please update same function in `response_errors.ts`\nconst isResponseWithError = (response) => !Array.isArray(response) &&\n    response.jsonrpc === '2.0' &&\n    !!response &&\n    (0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isNullish)(response.result) &&\n    // JSON RPC consider \"null\" as valid response\n    'error' in response &&\n    (typeof response.id === 'number' || typeof response.id === 'string');\nconst isResponseWithNotification = (response) => !Array.isArray(response) &&\n    !!response &&\n    response.jsonrpc === '2.0' &&\n    !(0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isNullish)(response.params) &&\n    !(0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isNullish)(response.method);\nconst isSubscriptionResult = (response) => !Array.isArray(response) &&\n    !!response &&\n    response.jsonrpc === '2.0' &&\n    'id' in response &&\n    // JSON RPC consider \"null\" as valid response\n    'result' in response;\nconst validateResponse = (response) => isResponseWithResult(response) || isResponseWithError(response);\nconst isValidResponse = (response) => Array.isArray(response) ? response.every(validateResponse) : validateResponse(response);\nconst isBatchResponse = (response) => Array.isArray(response) && response.length > 0 && isValidResponse(response);\n// internal optional variable to increment and use for the jsonrpc `id`\nlet requestIdSeed;\n/**\n * Optionally use to make the jsonrpc `id` start from a specific number.\n * Without calling this function, the `id` will be filled with a Uuid.\n * But after this being called with a number, the `id` will be a number starting from the provided `start` variable.\n * However, if `undefined` was passed to this function, the `id` will be a Uuid again.\n * @param start - a number to start incrementing from.\n * \tOr `undefined` to use a new Uuid (this is the default behavior)\n */\nconst setRequestIdStart = (start) => {\n    requestIdSeed = start;\n};\nconst toPayload = (request) => {\n    var _a, _b, _c, _d;\n    if (typeof requestIdSeed !== 'undefined') {\n        requestIdSeed += 1;\n    }\n    return {\n        jsonrpc: (_a = request.jsonrpc) !== null && _a !== void 0 ? _a : '2.0',\n        id: (_c = (_b = request.id) !== null && _b !== void 0 ? _b : requestIdSeed) !== null && _c !== void 0 ? _c : (0,_uuid_js__WEBPACK_IMPORTED_MODULE_2__.uuidV4)(),\n        method: request.method,\n        params: (_d = request.params) !== null && _d !== void 0 ? _d : undefined,\n    };\n};\nconst toBatchPayload = (requests) => requests.map(request => toPayload(request));\nconst isBatchRequest = (request) => Array.isArray(request) && request.length > 0;\n//# sourceMappingURL=json_rpc.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL2pzb25fcnBjLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDMkM7QUFDQTtBQUNSO0FBQ25DO0FBQ087QUFDUDtBQUNBLFdBQVcscURBQVk7QUFDdkI7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSx5REFBUztBQUNiO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxJQUFJLHlEQUFTO0FBQ2I7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsS0FBSyx5REFBUztBQUNkLEtBQUsseURBQVM7QUFDUDtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNBO0FBQ0E7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUhBQXFILGdEQUFNO0FBQzNIO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDQTtBQUNQIiwic291cmNlcyI6WyIvVXNlcnMvanVpY2VlbGxpc2gvRnVsbC1TdGFjay1EZXZlbG9wbWVudC9CbG9ja2NoYWluL1Byb2plY3RzL0NhbXBhaWduL25vZGVfbW9kdWxlcy93ZWIzLXV0aWxzL2xpYi9lc20vanNvbl9ycGMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG5pbXBvcnQgeyBpc051bGxpc2ggfSBmcm9tICd3ZWIzLXZhbGlkYXRvcic7XG5pbXBvcnQgeyBycGNFcnJvcnNNYXAgfSBmcm9tICd3ZWIzLWVycm9ycyc7XG5pbXBvcnQgeyB1dWlkVjQgfSBmcm9tICcuL3V1aWQuanMnO1xuLy8gY2hlY2sgaWYgY29kZSBpcyBhIHZhbGlkIHJwYyBzZXJ2ZXIgZXJyb3IgY29kZVxuZXhwb3J0IGNvbnN0IGlzUmVzcG9uc2VScGNFcnJvciA9IChycGNFcnJvcikgPT4ge1xuICAgIGNvbnN0IGVycm9yQ29kZSA9IHJwY0Vycm9yLmVycm9yLmNvZGU7XG4gICAgcmV0dXJuIHJwY0Vycm9yc01hcC5oYXMoZXJyb3JDb2RlKSB8fCAoZXJyb3JDb2RlID49IC0zMjA5OSAmJiBlcnJvckNvZGUgPD0gLTMyMDAwKTtcbn07XG5leHBvcnQgY29uc3QgaXNSZXNwb25zZVdpdGhSZXN1bHQgPSAocmVzcG9uc2UpID0+ICFBcnJheS5pc0FycmF5KHJlc3BvbnNlKSAmJlxuICAgICEhcmVzcG9uc2UgJiZcbiAgICByZXNwb25zZS5qc29ucnBjID09PSAnMi4wJyAmJlxuICAgIC8vIEpTT04gUlBDIGNvbnNpZGVyIFwibnVsbFwiIGFzIHZhbGlkIHJlc3BvbnNlXG4gICAgJ3Jlc3VsdCcgaW4gcmVzcG9uc2UgJiZcbiAgICBpc051bGxpc2gocmVzcG9uc2UuZXJyb3IpICYmXG4gICAgKHR5cGVvZiByZXNwb25zZS5pZCA9PT0gJ251bWJlcicgfHwgdHlwZW9mIHJlc3BvbnNlLmlkID09PSAnc3RyaW5nJyk7XG4vLyBUbyBhdm9pZCBjaXJjdWxhciBwYWNrYWdlIGRlcGVuZGVuY3ksIGNvcGllZCB0byBjb2RlIGhlcmUuIElmIHlvdSB1cGRhdGUgdGhpcyBwbGVhc2UgdXBkYXRlIHNhbWUgZnVuY3Rpb24gaW4gYHJlc3BvbnNlX2Vycm9ycy50c2BcbmV4cG9ydCBjb25zdCBpc1Jlc3BvbnNlV2l0aEVycm9yID0gKHJlc3BvbnNlKSA9PiAhQXJyYXkuaXNBcnJheShyZXNwb25zZSkgJiZcbiAgICByZXNwb25zZS5qc29ucnBjID09PSAnMi4wJyAmJlxuICAgICEhcmVzcG9uc2UgJiZcbiAgICBpc051bGxpc2gocmVzcG9uc2UucmVzdWx0KSAmJlxuICAgIC8vIEpTT04gUlBDIGNvbnNpZGVyIFwibnVsbFwiIGFzIHZhbGlkIHJlc3BvbnNlXG4gICAgJ2Vycm9yJyBpbiByZXNwb25zZSAmJlxuICAgICh0eXBlb2YgcmVzcG9uc2UuaWQgPT09ICdudW1iZXInIHx8IHR5cGVvZiByZXNwb25zZS5pZCA9PT0gJ3N0cmluZycpO1xuZXhwb3J0IGNvbnN0IGlzUmVzcG9uc2VXaXRoTm90aWZpY2F0aW9uID0gKHJlc3BvbnNlKSA9PiAhQXJyYXkuaXNBcnJheShyZXNwb25zZSkgJiZcbiAgICAhIXJlc3BvbnNlICYmXG4gICAgcmVzcG9uc2UuanNvbnJwYyA9PT0gJzIuMCcgJiZcbiAgICAhaXNOdWxsaXNoKHJlc3BvbnNlLnBhcmFtcykgJiZcbiAgICAhaXNOdWxsaXNoKHJlc3BvbnNlLm1ldGhvZCk7XG5leHBvcnQgY29uc3QgaXNTdWJzY3JpcHRpb25SZXN1bHQgPSAocmVzcG9uc2UpID0+ICFBcnJheS5pc0FycmF5KHJlc3BvbnNlKSAmJlxuICAgICEhcmVzcG9uc2UgJiZcbiAgICByZXNwb25zZS5qc29ucnBjID09PSAnMi4wJyAmJlxuICAgICdpZCcgaW4gcmVzcG9uc2UgJiZcbiAgICAvLyBKU09OIFJQQyBjb25zaWRlciBcIm51bGxcIiBhcyB2YWxpZCByZXNwb25zZVxuICAgICdyZXN1bHQnIGluIHJlc3BvbnNlO1xuZXhwb3J0IGNvbnN0IHZhbGlkYXRlUmVzcG9uc2UgPSAocmVzcG9uc2UpID0+IGlzUmVzcG9uc2VXaXRoUmVzdWx0KHJlc3BvbnNlKSB8fCBpc1Jlc3BvbnNlV2l0aEVycm9yKHJlc3BvbnNlKTtcbmV4cG9ydCBjb25zdCBpc1ZhbGlkUmVzcG9uc2UgPSAocmVzcG9uc2UpID0+IEFycmF5LmlzQXJyYXkocmVzcG9uc2UpID8gcmVzcG9uc2UuZXZlcnkodmFsaWRhdGVSZXNwb25zZSkgOiB2YWxpZGF0ZVJlc3BvbnNlKHJlc3BvbnNlKTtcbmV4cG9ydCBjb25zdCBpc0JhdGNoUmVzcG9uc2UgPSAocmVzcG9uc2UpID0+IEFycmF5LmlzQXJyYXkocmVzcG9uc2UpICYmIHJlc3BvbnNlLmxlbmd0aCA+IDAgJiYgaXNWYWxpZFJlc3BvbnNlKHJlc3BvbnNlKTtcbi8vIGludGVybmFsIG9wdGlvbmFsIHZhcmlhYmxlIHRvIGluY3JlbWVudCBhbmQgdXNlIGZvciB0aGUganNvbnJwYyBgaWRgXG5sZXQgcmVxdWVzdElkU2VlZDtcbi8qKlxuICogT3B0aW9uYWxseSB1c2UgdG8gbWFrZSB0aGUganNvbnJwYyBgaWRgIHN0YXJ0IGZyb20gYSBzcGVjaWZpYyBudW1iZXIuXG4gKiBXaXRob3V0IGNhbGxpbmcgdGhpcyBmdW5jdGlvbiwgdGhlIGBpZGAgd2lsbCBiZSBmaWxsZWQgd2l0aCBhIFV1aWQuXG4gKiBCdXQgYWZ0ZXIgdGhpcyBiZWluZyBjYWxsZWQgd2l0aCBhIG51bWJlciwgdGhlIGBpZGAgd2lsbCBiZSBhIG51bWJlciBzdGFydGluZyBmcm9tIHRoZSBwcm92aWRlZCBgc3RhcnRgIHZhcmlhYmxlLlxuICogSG93ZXZlciwgaWYgYHVuZGVmaW5lZGAgd2FzIHBhc3NlZCB0byB0aGlzIGZ1bmN0aW9uLCB0aGUgYGlkYCB3aWxsIGJlIGEgVXVpZCBhZ2Fpbi5cbiAqIEBwYXJhbSBzdGFydCAtIGEgbnVtYmVyIHRvIHN0YXJ0IGluY3JlbWVudGluZyBmcm9tLlxuICogXHRPciBgdW5kZWZpbmVkYCB0byB1c2UgYSBuZXcgVXVpZCAodGhpcyBpcyB0aGUgZGVmYXVsdCBiZWhhdmlvcilcbiAqL1xuZXhwb3J0IGNvbnN0IHNldFJlcXVlc3RJZFN0YXJ0ID0gKHN0YXJ0KSA9PiB7XG4gICAgcmVxdWVzdElkU2VlZCA9IHN0YXJ0O1xufTtcbmV4cG9ydCBjb25zdCB0b1BheWxvYWQgPSAocmVxdWVzdCkgPT4ge1xuICAgIHZhciBfYSwgX2IsIF9jLCBfZDtcbiAgICBpZiAodHlwZW9mIHJlcXVlc3RJZFNlZWQgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJlcXVlc3RJZFNlZWQgKz0gMTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAganNvbnJwYzogKF9hID0gcmVxdWVzdC5qc29ucnBjKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiAnMi4wJyxcbiAgICAgICAgaWQ6IChfYyA9IChfYiA9IHJlcXVlc3QuaWQpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IHJlcXVlc3RJZFNlZWQpICE9PSBudWxsICYmIF9jICE9PSB2b2lkIDAgPyBfYyA6IHV1aWRWNCgpLFxuICAgICAgICBtZXRob2Q6IHJlcXVlc3QubWV0aG9kLFxuICAgICAgICBwYXJhbXM6IChfZCA9IHJlcXVlc3QucGFyYW1zKSAhPT0gbnVsbCAmJiBfZCAhPT0gdm9pZCAwID8gX2QgOiB1bmRlZmluZWQsXG4gICAgfTtcbn07XG5leHBvcnQgY29uc3QgdG9CYXRjaFBheWxvYWQgPSAocmVxdWVzdHMpID0+IHJlcXVlc3RzLm1hcChyZXF1ZXN0ID0+IHRvUGF5bG9hZChyZXF1ZXN0KSk7XG5leHBvcnQgY29uc3QgaXNCYXRjaFJlcXVlc3QgPSAocmVxdWVzdCkgPT4gQXJyYXkuaXNBcnJheShyZXF1ZXN0KSAmJiByZXF1ZXN0Lmxlbmd0aCA+IDA7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1qc29uX3JwYy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/web3-utils/lib/esm/json_rpc.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/web3-utils/lib/esm/objects.js":
/*!****************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/objects.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeDeep: () => (/* binding */ mergeDeep)\n/* harmony export */ });\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ \"(rsc)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ \"(rsc)/./node_modules/web3-validator/lib/esm/index.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\nconst isIterable = (item) => typeof item === 'object' &&\n    !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(item) &&\n    !Array.isArray(item) &&\n    !(item instanceof web3_types__WEBPACK_IMPORTED_MODULE_0__.TypedArray);\n// The following code is a derivative work of the code from the \"LiskHQ/lisk-sdk\" project,\n// which is licensed under Apache version 2.\n/**\n * Deep merge two objects.\n * @param destination - The destination object.\n * @param sources - An array of source objects.\n * @returns - The merged object.\n */\nconst mergeDeep = (destination, ...sources) => {\n    if (!isIterable(destination)) {\n        return destination;\n    }\n    const result = Object.assign({}, destination); // clone deep here\n    for (const src of sources) {\n        // const src = { ..._src };\n        // eslint-disable-next-line no-restricted-syntax\n        for (const key in src) {\n            if (isIterable(src[key])) {\n                if (!result[key]) {\n                    result[key] = {};\n                }\n                result[key] = mergeDeep(result[key], src[key]);\n            }\n            else if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(src[key]) && Object.hasOwnProperty.call(src, key)) {\n                if (Array.isArray(src[key]) || src[key] instanceof web3_types__WEBPACK_IMPORTED_MODULE_0__.TypedArray) {\n                    result[key] = src[key].slice(0);\n                }\n                else {\n                    result[key] = src[key];\n                }\n            }\n        }\n    }\n    return result;\n};\n//# sourceMappingURL=objects.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL29iamVjdHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUN3QztBQUNHO0FBQzNDO0FBQ0EsS0FBSyx5REFBUztBQUNkO0FBQ0Esc0JBQXNCLGtEQUFVO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxnQkFBZ0I7QUFDbkQ7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix5REFBUztBQUMvQixtRUFBbUUsa0RBQVU7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2p1aWNlZWxsaXNoL0Z1bGwtU3RhY2stRGV2ZWxvcG1lbnQvQmxvY2tjaGFpbi9Qcm9qZWN0cy9DYW1wYWlnbi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL29iamVjdHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG5pbXBvcnQgeyBUeXBlZEFycmF5IH0gZnJvbSAnd2ViMy10eXBlcyc7XG5pbXBvcnQgeyBpc051bGxpc2ggfSBmcm9tICd3ZWIzLXZhbGlkYXRvcic7XG5jb25zdCBpc0l0ZXJhYmxlID0gKGl0ZW0pID0+IHR5cGVvZiBpdGVtID09PSAnb2JqZWN0JyAmJlxuICAgICFpc051bGxpc2goaXRlbSkgJiZcbiAgICAhQXJyYXkuaXNBcnJheShpdGVtKSAmJlxuICAgICEoaXRlbSBpbnN0YW5jZW9mIFR5cGVkQXJyYXkpO1xuLy8gVGhlIGZvbGxvd2luZyBjb2RlIGlzIGEgZGVyaXZhdGl2ZSB3b3JrIG9mIHRoZSBjb2RlIGZyb20gdGhlIFwiTGlza0hRL2xpc2stc2RrXCIgcHJvamVjdCxcbi8vIHdoaWNoIGlzIGxpY2Vuc2VkIHVuZGVyIEFwYWNoZSB2ZXJzaW9uIDIuXG4vKipcbiAqIERlZXAgbWVyZ2UgdHdvIG9iamVjdHMuXG4gKiBAcGFyYW0gZGVzdGluYXRpb24gLSBUaGUgZGVzdGluYXRpb24gb2JqZWN0LlxuICogQHBhcmFtIHNvdXJjZXMgLSBBbiBhcnJheSBvZiBzb3VyY2Ugb2JqZWN0cy5cbiAqIEByZXR1cm5zIC0gVGhlIG1lcmdlZCBvYmplY3QuXG4gKi9cbmV4cG9ydCBjb25zdCBtZXJnZURlZXAgPSAoZGVzdGluYXRpb24sIC4uLnNvdXJjZXMpID0+IHtcbiAgICBpZiAoIWlzSXRlcmFibGUoZGVzdGluYXRpb24pKSB7XG4gICAgICAgIHJldHVybiBkZXN0aW5hdGlvbjtcbiAgICB9XG4gICAgY29uc3QgcmVzdWx0ID0gT2JqZWN0LmFzc2lnbih7fSwgZGVzdGluYXRpb24pOyAvLyBjbG9uZSBkZWVwIGhlcmVcbiAgICBmb3IgKGNvbnN0IHNyYyBvZiBzb3VyY2VzKSB7XG4gICAgICAgIC8vIGNvbnN0IHNyYyA9IHsgLi4uX3NyYyB9O1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcmVzdHJpY3RlZC1zeW50YXhcbiAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gc3JjKSB7XG4gICAgICAgICAgICBpZiAoaXNJdGVyYWJsZShzcmNba2V5XSkpIHtcbiAgICAgICAgICAgICAgICBpZiAoIXJlc3VsdFtrZXldKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdFtrZXldID0ge307XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJlc3VsdFtrZXldID0gbWVyZ2VEZWVwKHJlc3VsdFtrZXldLCBzcmNba2V5XSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICghaXNOdWxsaXNoKHNyY1trZXldKSAmJiBPYmplY3QuaGFzT3duUHJvcGVydHkuY2FsbChzcmMsIGtleSkpIHtcbiAgICAgICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShzcmNba2V5XSkgfHwgc3JjW2tleV0gaW5zdGFuY2VvZiBUeXBlZEFycmF5KSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdFtrZXldID0gc3JjW2tleV0uc2xpY2UoMCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXN1bHRba2V5XSA9IHNyY1trZXldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9iamVjdHMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/web3-utils/lib/esm/objects.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/web3-utils/lib/esm/promise_helpers.js":
/*!************************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/promise_helpers.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isPromise: () => (/* binding */ isPromise),\n/* harmony export */   pollTillDefined: () => (/* binding */ pollTillDefined),\n/* harmony export */   pollTillDefinedAndReturnIntervalId: () => (/* binding */ pollTillDefinedAndReturnIntervalId),\n/* harmony export */   rejectIfConditionAtInterval: () => (/* binding */ rejectIfConditionAtInterval),\n/* harmony export */   rejectIfTimeout: () => (/* binding */ rejectIfTimeout),\n/* harmony export */   waitWithTimeout: () => (/* binding */ waitWithTimeout)\n/* harmony export */ });\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-validator */ \"(rsc)/./node_modules/web3-validator/lib/esm/index.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n/**\n * An alternative to the node function `isPromise` that exists in `util/types` because it is not available on the browser.\n * @param object - to check if it is a `Promise`\n * @returns `true` if it is an `object` or a `function` that has a `then` function. And returns `false` otherwise.\n */\nfunction isPromise(object) {\n    return ((typeof object === 'object' || typeof object === 'function') &&\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        typeof object.then === 'function');\n}\n/**\n * Wait for a promise but interrupt it if it did not resolve within a given timeout.\n * If the timeout reached, before the promise code resolve, either throw an error if an error object was provided, or return `undefined`.\n * @param awaitable - The promise or function to wait for.\n * @param timeout - The timeout in milliseconds.\n * @param error - (Optional) The error to throw if the timeout reached.\n */\nfunction waitWithTimeout(awaitable, timeout, error) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let timeoutId;\n        const result = yield Promise.race([\n            awaitable instanceof Promise ? awaitable : awaitable(),\n            new Promise((resolve, reject) => {\n                timeoutId = setTimeout(() => (error ? reject(error) : resolve(undefined)), timeout);\n            }),\n        ]);\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        if (result instanceof Error) {\n            throw result;\n        }\n        return result;\n    });\n}\n/**\n * Repeatedly calls an async function with a given interval until the result of the function is defined (not undefined or null),\n * or until a timeout is reached. It returns promise and intervalId.\n * @param func - The function to call.\n * @param interval - The interval in milliseconds.\n */\nfunction pollTillDefinedAndReturnIntervalId(func, interval) {\n    let intervalId;\n    const polledRes = new Promise((resolve, reject) => {\n        intervalId = setInterval((function intervalCallbackFunc() {\n            (() => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const res = yield waitWithTimeout(func, interval);\n                    if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_0__.isNullish)(res)) {\n                        clearInterval(intervalId);\n                        resolve(res);\n                    }\n                }\n                catch (error) {\n                    clearInterval(intervalId);\n                    reject(error);\n                }\n            }))();\n            return intervalCallbackFunc;\n        })(), // this will immediate invoke first call\n        interval);\n    });\n    return [polledRes, intervalId];\n}\n/**\n * Repeatedly calls an async function with a given interval until the result of the function is defined (not undefined or null),\n * or until a timeout is reached.\n * pollTillDefinedAndReturnIntervalId() function should be used instead of pollTillDefined if you need IntervalId in result.\n * This function will be deprecated in next major release so use pollTillDefinedAndReturnIntervalId().\n * @param func - The function to call.\n * @param interval - The interval in milliseconds.\n */\nfunction pollTillDefined(func, interval) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return pollTillDefinedAndReturnIntervalId(func, interval)[0];\n    });\n}\n/**\n * Enforce a timeout on a promise, so that it can be rejected if it takes too long to complete\n * @param timeout - The timeout to enforced in milliseconds.\n * @param error - The error to throw if the timeout is reached.\n * @returns A tuple of the timeout id and the promise that will be rejected if the timeout is reached.\n *\n * @example\n * ```ts\n * const [timerId, promise] = web3.utils.rejectIfTimeout(100, new Error('time out'));\n * ```\n */\nfunction rejectIfTimeout(timeout, error) {\n    let timeoutId;\n    const rejectOnTimeout = new Promise((_, reject) => {\n        timeoutId = setTimeout(() => {\n            reject(error);\n        }, timeout);\n    });\n    return [timeoutId, rejectOnTimeout];\n}\n/**\n * Sets an interval that repeatedly executes the given cond function with the specified interval between each call.\n * If the condition is met, the interval is cleared and a Promise that rejects with the returned value is returned.\n * @param cond - The function/condition to call.\n * @param interval - The interval in milliseconds.\n * @returns - an array with the interval ID and the Promise.\n */\nfunction rejectIfConditionAtInterval(cond, interval) {\n    let intervalId;\n    const rejectIfCondition = new Promise((_, reject) => {\n        intervalId = setInterval(() => {\n            (() => __awaiter(this, void 0, void 0, function* () {\n                const error = yield cond();\n                if (error) {\n                    clearInterval(intervalId);\n                    reject(error);\n                }\n            }))();\n        }, interval);\n    });\n    return [intervalId, rejectIfCondition];\n}\n//# sourceMappingURL=promise_helpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/web3-utils/lib/esm/promise_helpers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/web3-utils/lib/esm/random.js":
/*!***************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/random.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   randomBytes: () => (/* binding */ randomBytes),\n/* harmony export */   randomHex: () => (/* binding */ randomHex)\n/* harmony export */ });\n/* harmony import */ var ethereum_cryptography_random_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ethereum-cryptography/random.js */ \"(rsc)/./node_modules/web3-utils/node_modules/ethereum-cryptography/esm/random.js\");\n/* harmony import */ var _converters_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./converters.js */ \"(rsc)/./node_modules/web3-utils/lib/esm/converters.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @module Utils\n */\n\n\n/**\n * Returns a random byte array by the given bytes size\n * @param size - The size of the random byte array returned\n * @returns - random byte array\n *\n * @example\n * ```ts\n * console.log(web3.utils.randomBytes(32));\n * > Uint8Array(32) [\n *       93, 172, 226,  32,  33, 176, 156, 156,\n *       182,  30, 240,   2,  69,  96, 174, 197,\n *       33, 136, 194, 241, 197, 156, 110, 111,\n *       66,  87,  17,  88,  67,  48, 245, 183\n *    ]\n * ```\n */\nconst randomBytes = (size) => (0,ethereum_cryptography_random_js__WEBPACK_IMPORTED_MODULE_0__.getRandomBytesSync)(size);\n/**\n * Returns a random hex string by the given bytes size\n * @param byteSize - The size of the random hex string returned\n * @returns - random hex string\n *\n * ```ts\n * console.log(web3.utils.randomHex(32));\n * > 0x139f5b88b72a25eab053d3b57fe1f8a9dbc62a526b1cb1774d0d7db1c3e7ce9e\n * ```\n */\nconst randomHex = (byteSize) => (0,_converters_js__WEBPACK_IMPORTED_MODULE_1__.bytesToHex)(randomBytes(byteSize));\n//# sourceMappingURL=random.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL3JhbmRvbS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNxRTtBQUN4QjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDhCQUE4QixtRkFBa0I7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxnQ0FBZ0MsMERBQVU7QUFDakQiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qdWljZWVsbGlzaC9GdWxsLVN0YWNrLURldmVsb3BtZW50L0Jsb2NrY2hhaW4vUHJvamVjdHMvQ2FtcGFpZ24vbm9kZV9tb2R1bGVzL3dlYjMtdXRpbHMvbGliL2VzbS9yYW5kb20uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcblRoaXMgZmlsZSBpcyBwYXJ0IG9mIHdlYjMuanMuXG5cbndlYjMuanMgaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeVxuaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYXMgcHVibGlzaGVkIGJ5XG50aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCBlaXRoZXIgdmVyc2lvbiAzIG9mIHRoZSBMaWNlbnNlLCBvclxuKGF0IHlvdXIgb3B0aW9uKSBhbnkgbGF0ZXIgdmVyc2lvbi5cblxud2ViMy5qcyBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLFxuYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2Zcbk1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGVcbkdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBmb3IgbW9yZSBkZXRhaWxzLlxuXG5Zb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2VcbmFsb25nIHdpdGggd2ViMy5qcy4gIElmIG5vdCwgc2VlIDxodHRwOi8vd3d3LmdudS5vcmcvbGljZW5zZXMvPi5cbiovXG4vKipcbiAqIEBtb2R1bGUgVXRpbHNcbiAqL1xuaW1wb3J0IHsgZ2V0UmFuZG9tQnl0ZXNTeW5jIH0gZnJvbSAnZXRoZXJldW0tY3J5cHRvZ3JhcGh5L3JhbmRvbS5qcyc7XG5pbXBvcnQgeyBieXRlc1RvSGV4IH0gZnJvbSAnLi9jb252ZXJ0ZXJzLmpzJztcbi8qKlxuICogUmV0dXJucyBhIHJhbmRvbSBieXRlIGFycmF5IGJ5IHRoZSBnaXZlbiBieXRlcyBzaXplXG4gKiBAcGFyYW0gc2l6ZSAtIFRoZSBzaXplIG9mIHRoZSByYW5kb20gYnl0ZSBhcnJheSByZXR1cm5lZFxuICogQHJldHVybnMgLSByYW5kb20gYnl0ZSBhcnJheVxuICpcbiAqIEBleGFtcGxlXG4gKiBgYGB0c1xuICogY29uc29sZS5sb2cod2ViMy51dGlscy5yYW5kb21CeXRlcygzMikpO1xuICogPiBVaW50OEFycmF5KDMyKSBbXG4gKiAgICAgICA5MywgMTcyLCAyMjYsICAzMiwgIDMzLCAxNzYsIDE1NiwgMTU2LFxuICogICAgICAgMTgyLCAgMzAsIDI0MCwgICAyLCAgNjksICA5NiwgMTc0LCAxOTcsXG4gKiAgICAgICAzMywgMTM2LCAxOTQsIDI0MSwgMTk3LCAxNTYsIDExMCwgMTExLFxuICogICAgICAgNjYsICA4NywgIDE3LCAgODgsICA2NywgIDQ4LCAyNDUsIDE4M1xuICogICAgXVxuICogYGBgXG4gKi9cbmV4cG9ydCBjb25zdCByYW5kb21CeXRlcyA9IChzaXplKSA9PiBnZXRSYW5kb21CeXRlc1N5bmMoc2l6ZSk7XG4vKipcbiAqIFJldHVybnMgYSByYW5kb20gaGV4IHN0cmluZyBieSB0aGUgZ2l2ZW4gYnl0ZXMgc2l6ZVxuICogQHBhcmFtIGJ5dGVTaXplIC0gVGhlIHNpemUgb2YgdGhlIHJhbmRvbSBoZXggc3RyaW5nIHJldHVybmVkXG4gKiBAcmV0dXJucyAtIHJhbmRvbSBoZXggc3RyaW5nXG4gKlxuICogYGBgdHNcbiAqIGNvbnNvbGUubG9nKHdlYjMudXRpbHMucmFuZG9tSGV4KDMyKSk7XG4gKiA+IDB4MTM5ZjViODhiNzJhMjVlYWIwNTNkM2I1N2ZlMWY4YTlkYmM2MmE1MjZiMWNiMTc3NGQwZDdkYjFjM2U3Y2U5ZVxuICogYGBgXG4gKi9cbmV4cG9ydCBjb25zdCByYW5kb21IZXggPSAoYnl0ZVNpemUpID0+IGJ5dGVzVG9IZXgocmFuZG9tQnl0ZXMoYnl0ZVNpemUpKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJhbmRvbS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/web3-utils/lib/esm/random.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/web3-utils/lib/esm/socket_provider.js":
/*!************************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/socket_provider.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SocketProvider: () => (/* binding */ SocketProvider)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(rsc)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _web3_eip1193_provider_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./web3_eip1193_provider.js */ \"(rsc)/./node_modules/web3-utils/lib/esm/web3_eip1193_provider.js\");\n/* harmony import */ var _chunk_response_parser_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk_response_parser.js */ \"(rsc)/./node_modules/web3-utils/lib/esm/chunk_response_parser.js\");\n/* harmony import */ var _validation_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./validation.js */ \"(rsc)/./node_modules/web3-utils/lib/esm/validation.js\");\n/* harmony import */ var _web3_deferred_promise_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./web3_deferred_promise.js */ \"(rsc)/./node_modules/web3-utils/lib/esm/web3_deferred_promise.js\");\n/* harmony import */ var _json_rpc_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./json_rpc.js */ \"(rsc)/./node_modules/web3-utils/lib/esm/json_rpc.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\nconst DEFAULT_RECONNECTION_OPTIONS = {\n    autoReconnect: true,\n    delay: 5000,\n    maxAttempts: 5,\n};\nconst NORMAL_CLOSE_CODE = 1000; // https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/close\nclass SocketProvider extends _web3_eip1193_provider_js__WEBPACK_IMPORTED_MODULE_1__.Eip1193Provider {\n    get SocketConnection() {\n        return this._socketConnection;\n    }\n    /**\n     * This is an abstract class for implementing a socket provider (e.g. WebSocket, IPC). It extends the EIP-1193 provider {@link EIP1193Provider}.\n     * @param socketPath - The path to the socket (e.g. /ipc/path or ws://localhost:8546)\n     * @param socketOptions - The options for the socket connection. Its type is supposed to be specified in the inherited classes.\n     * @param reconnectOptions - The options for the socket reconnection {@link ReconnectOptions}\n     */\n    constructor(socketPath, socketOptions, reconnectOptions) {\n        super();\n        this._connectionStatus = 'connecting';\n        // Message handlers. Due to bounding of `this` and removing the listeners we have to keep it's reference.\n        this._onMessageHandler = this._onMessage.bind(this);\n        this._onOpenHandler = this._onConnect.bind(this);\n        this._onCloseHandler = this._onCloseEvent.bind(this);\n        this._onErrorHandler = this._onError.bind(this);\n        if (!this._validateProviderPath(socketPath))\n            throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.InvalidClientError(socketPath);\n        this._socketPath = socketPath;\n        this._socketOptions = socketOptions;\n        this._reconnectOptions = Object.assign(Object.assign({}, DEFAULT_RECONNECTION_OPTIONS), (reconnectOptions !== null && reconnectOptions !== void 0 ? reconnectOptions : {}));\n        this._pendingRequestsQueue = new Map();\n        this._sentRequestsQueue = new Map();\n        this._init();\n        this.connect();\n        this.chunkResponseParser = new _chunk_response_parser_js__WEBPACK_IMPORTED_MODULE_2__.ChunkResponseParser(this._eventEmitter, this._reconnectOptions.autoReconnect);\n        this.chunkResponseParser.onError(() => {\n            this._clearQueues();\n        });\n        this.isReconnecting = false;\n    }\n    _init() {\n        this._reconnectAttempts = 0;\n    }\n    /**\n     * Try to establish a connection to the socket\n     */\n    connect() {\n        try {\n            this._openSocketConnection();\n            this._connectionStatus = 'connecting';\n            this._addSocketListeners();\n        }\n        catch (e) {\n            if (!this.isReconnecting) {\n                this._connectionStatus = 'disconnected';\n                if (e && e.message) {\n                    throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.ConnectionError(`Error while connecting to ${this._socketPath}. Reason: ${e.message}`);\n                }\n                else {\n                    throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.InvalidClientError(this._socketPath);\n                }\n            }\n            else {\n                setImmediate(() => {\n                    this._reconnect();\n                });\n            }\n        }\n    }\n    // eslint-disable-next-line class-methods-use-this\n    _validateProviderPath(path) {\n        return !!path;\n    }\n    /**\n     *\n     * @returns the pendingRequestQueue size\n     */\n    // eslint-disable-next-line class-methods-use-this\n    getPendingRequestQueueSize() {\n        return this._pendingRequestsQueue.size;\n    }\n    /**\n     *\n     * @returns the sendPendingRequests size\n     */\n    // eslint-disable-next-line class-methods-use-this\n    getSentRequestsQueueSize() {\n        return this._sentRequestsQueue.size;\n    }\n    /**\n     *\n     * @returns `true` if the socket supports subscriptions\n     */\n    // eslint-disable-next-line class-methods-use-this\n    supportsSubscriptions() {\n        return true;\n    }\n    on(type, listener) {\n        this._eventEmitter.on(type, listener);\n    }\n    once(type, listener) {\n        this._eventEmitter.once(type, listener);\n    }\n    removeListener(type, listener) {\n        this._eventEmitter.removeListener(type, listener);\n    }\n    _onDisconnect(code, data) {\n        this._connectionStatus = 'disconnected';\n        super._onDisconnect(code, data);\n    }\n    /**\n     * Disconnects the socket\n     * @param code - The code to be sent to the server\n     * @param data - The data to be sent to the server\n     */\n    disconnect(code, data) {\n        const disconnectCode = code !== null && code !== void 0 ? code : NORMAL_CLOSE_CODE;\n        this._removeSocketListeners();\n        if (this.getStatus() !== 'disconnected') {\n            this._closeSocketConnection(disconnectCode, data);\n        }\n        this._onDisconnect(disconnectCode, data);\n    }\n    /**\n     * Safely disconnects the socket, async and waits for request size to be 0 before disconnecting\n     * @param forceDisconnect - If true, will clear queue after 5 attempts of waiting for both pending and sent queue to be 0\n     * @param ms - Determines the ms of setInterval\n     * @param code - The code to be sent to the server\n     * @param data - The data to be sent to the server\n     */\n    safeDisconnect(code_1, data_1) {\n        return __awaiter(this, arguments, void 0, function* (code, data, forceDisconnect = false, ms = 1000) {\n            let retryAttempt = 0;\n            const checkQueue = () => __awaiter(this, void 0, void 0, function* () {\n                return new Promise(resolve => {\n                    const interval = setInterval(() => {\n                        if (forceDisconnect && retryAttempt >= 5) {\n                            this.clearQueues();\n                        }\n                        if (this.getPendingRequestQueueSize() === 0 &&\n                            this.getSentRequestsQueueSize() === 0) {\n                            clearInterval(interval);\n                            resolve(true);\n                        }\n                        retryAttempt += 1;\n                    }, ms);\n                });\n            });\n            yield checkQueue();\n            this.disconnect(code, data);\n        });\n    }\n    /**\n     * Removes all listeners for the specified event type.\n     * @param type - The event type to remove the listeners for\n     */\n    removeAllListeners(type) {\n        this._eventEmitter.removeAllListeners(type);\n    }\n    _onError(event) {\n        // do not emit error while trying to reconnect\n        if (this.isReconnecting) {\n            this._reconnect();\n        }\n        else {\n            this._eventEmitter.emit('error', event);\n        }\n    }\n    /**\n     * Resets the socket, removing all listeners and pending requests\n     */\n    reset() {\n        this._sentRequestsQueue.clear();\n        this._pendingRequestsQueue.clear();\n        this._init();\n        this._removeSocketListeners();\n        this._addSocketListeners();\n    }\n    _reconnect() {\n        if (this.isReconnecting) {\n            return;\n        }\n        this.isReconnecting = true;\n        if (this._sentRequestsQueue.size > 0) {\n            this._sentRequestsQueue.forEach((request, key) => {\n                request.deferredPromise.reject(new web3_errors__WEBPACK_IMPORTED_MODULE_0__.PendingRequestsOnReconnectingError());\n                this._sentRequestsQueue.delete(key);\n            });\n        }\n        if (this._reconnectAttempts < this._reconnectOptions.maxAttempts) {\n            this._reconnectAttempts += 1;\n            setTimeout(() => {\n                this._removeSocketListeners();\n                this.connect(); // this can error out\n                this.isReconnecting = false;\n            }, this._reconnectOptions.delay);\n        }\n        else {\n            this.isReconnecting = false;\n            this._clearQueues();\n            this._removeSocketListeners();\n            this._eventEmitter.emit('error', new web3_errors__WEBPACK_IMPORTED_MODULE_0__.MaxAttemptsReachedOnReconnectingError(this._reconnectOptions.maxAttempts));\n        }\n    }\n    /**\n     *  Creates a request object to be sent to the server\n     */\n    request(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if ((0,_validation_js__WEBPACK_IMPORTED_MODULE_3__.isNullish)(this._socketConnection)) {\n                throw new Error('Connection is undefined');\n            }\n            // if socket disconnected - open connection\n            if (this.getStatus() === 'disconnected') {\n                this.connect();\n            }\n            const requestId = _json_rpc_js__WEBPACK_IMPORTED_MODULE_5__.isBatchRequest(request)\n                ? request[0].id\n                : request.id;\n            if (!requestId) {\n                throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.Web3WSProviderError('Request Id not defined');\n            }\n            if (this._sentRequestsQueue.has(requestId)) {\n                throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.RequestAlreadySentError(requestId);\n            }\n            const deferredPromise = new _web3_deferred_promise_js__WEBPACK_IMPORTED_MODULE_4__.Web3DeferredPromise();\n            deferredPromise.catch(error => {\n                this._eventEmitter.emit('error', error);\n            });\n            const reqItem = {\n                payload: request,\n                deferredPromise,\n            };\n            if (this.getStatus() === 'connecting') {\n                this._pendingRequestsQueue.set(requestId, reqItem);\n                return reqItem.deferredPromise;\n            }\n            this._sentRequestsQueue.set(requestId, reqItem);\n            try {\n                this._sendToSocket(reqItem.payload);\n            }\n            catch (error) {\n                this._sentRequestsQueue.delete(requestId);\n                this._eventEmitter.emit('error', error);\n            }\n            return deferredPromise;\n        });\n    }\n    _onConnect() {\n        this._connectionStatus = 'connected';\n        this._reconnectAttempts = 0;\n        super._onConnect();\n        this._sendPendingRequests();\n    }\n    _sendPendingRequests() {\n        for (const [id, value] of this._pendingRequestsQueue.entries()) {\n            try {\n                this._sendToSocket(value.payload);\n                this._pendingRequestsQueue.delete(id);\n                this._sentRequestsQueue.set(id, value);\n            }\n            catch (error) {\n                // catches if sendTosocket fails\n                this._pendingRequestsQueue.delete(id);\n                this._eventEmitter.emit('error', error);\n            }\n        }\n    }\n    _onMessage(event) {\n        const responses = this._parseResponses(event);\n        if ((0,_validation_js__WEBPACK_IMPORTED_MODULE_3__.isNullish)(responses) || responses.length === 0) {\n            return;\n        }\n        for (const response of responses) {\n            if (_json_rpc_js__WEBPACK_IMPORTED_MODULE_5__.isResponseWithNotification(response) &&\n                response.method.endsWith('_subscription')) {\n                this._eventEmitter.emit('message', response);\n                return;\n            }\n            const requestId = _json_rpc_js__WEBPACK_IMPORTED_MODULE_5__.isBatchResponse(response)\n                ? response[0].id\n                : response.id;\n            const requestItem = this._sentRequestsQueue.get(requestId);\n            if (!requestItem) {\n                return;\n            }\n            if (_json_rpc_js__WEBPACK_IMPORTED_MODULE_5__.isBatchResponse(response) ||\n                _json_rpc_js__WEBPACK_IMPORTED_MODULE_5__.isResponseWithResult(response) ||\n                _json_rpc_js__WEBPACK_IMPORTED_MODULE_5__.isResponseWithError(response)) {\n                this._eventEmitter.emit('message', response);\n                requestItem.deferredPromise.resolve(response);\n            }\n            this._sentRequestsQueue.delete(requestId);\n        }\n    }\n    clearQueues(event) {\n        this._clearQueues(event);\n    }\n    _clearQueues(event) {\n        if (this._pendingRequestsQueue.size > 0) {\n            this._pendingRequestsQueue.forEach((request, key) => {\n                request.deferredPromise.reject(new web3_errors__WEBPACK_IMPORTED_MODULE_0__.ConnectionNotOpenError(event));\n                this._pendingRequestsQueue.delete(key);\n            });\n        }\n        if (this._sentRequestsQueue.size > 0) {\n            this._sentRequestsQueue.forEach((request, key) => {\n                request.deferredPromise.reject(new web3_errors__WEBPACK_IMPORTED_MODULE_0__.ConnectionNotOpenError(event));\n                this._sentRequestsQueue.delete(key);\n            });\n        }\n        this._removeSocketListeners();\n    }\n}\n//# sourceMappingURL=socket_provider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/web3-utils/lib/esm/socket_provider.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/web3-utils/lib/esm/string_manipulation.js":
/*!****************************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/string_manipulation.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromTwosComplement: () => (/* binding */ fromTwosComplement),\n/* harmony export */   leftPad: () => (/* binding */ leftPad),\n/* harmony export */   padLeft: () => (/* binding */ padLeft),\n/* harmony export */   padRight: () => (/* binding */ padRight),\n/* harmony export */   rightPad: () => (/* binding */ rightPad),\n/* harmony export */   toTwosComplement: () => (/* binding */ toTwosComplement)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(rsc)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ \"(rsc)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var _converters_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./converters.js */ \"(rsc)/./node_modules/web3-utils/lib/esm/converters.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n\n/**\n * Adds a padding on the left of a string, if value is a integer or bigInt will be converted to a hex string.\n * @param value - The value to be padded.\n * @param characterAmount - The amount of characters the string should have.\n * @param sign - The sign to be added (default is 0).\n * @returns The padded string.\n *\n * @example\n * ```ts\n *\n * console.log(web3.utils.padLeft('0x123', 10));\n * >0x0000000123\n * ```\n */\nconst padLeft = (value, characterAmount, sign = '0') => {\n    // To avoid duplicate code and circular dependency we will\n    // use `padLeft` implementation from `web3-validator`\n    if (typeof value === 'string') {\n        if (!(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value)) {\n            return value.padStart(characterAmount, sign);\n        }\n        return web3_validator__WEBPACK_IMPORTED_MODULE_1__.utils.padLeft(value, characterAmount, sign);\n    }\n    web3_validator__WEBPACK_IMPORTED_MODULE_1__.validator.validate(['int'], [value]);\n    return web3_validator__WEBPACK_IMPORTED_MODULE_1__.utils.padLeft(value, characterAmount, sign);\n};\n/**\n * Adds a padding on the right of a string, if value is a integer or bigInt will be converted to a hex string.\n * @param value - The value to be padded.\n * @param characterAmount - The amount of characters the string should have.\n * @param sign - The sign to be added (default is 0).\n * @returns The padded string.\n *\n * @example\n * ```ts\n * console.log(web3.utils.padRight('0x123', 10));\n * > 0x1230000000\n *\n * console.log(web3.utils.padRight('0x123', 10, '1'));\n * > 0x1231111111\n * ```\n */\nconst padRight = (value, characterAmount, sign = '0') => {\n    if (typeof value === 'string' && !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value)) {\n        return value.padEnd(characterAmount, sign);\n    }\n    const hexString = typeof value === 'string' && (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict)(value) ? value : (0,_converters_js__WEBPACK_IMPORTED_MODULE_2__.numberToHex)(value);\n    const prefixLength = hexString.startsWith('-') ? 3 : 2;\n    web3_validator__WEBPACK_IMPORTED_MODULE_1__.validator.validate([hexString.startsWith('-') ? 'int' : 'uint'], [value]);\n    return hexString.padEnd(characterAmount + prefixLength, sign);\n};\n/**\n * Adds a padding on the right of a string, if value is a integer or bigInt will be converted to a hex string. @alias `padRight`\n */\nconst rightPad = padRight;\n/**\n * Adds a padding on the left of a string, if value is a integer or bigInt will be converted to a hex string. @alias `padLeft`\n */\nconst leftPad = padLeft;\n/**\n * Converts a negative number into the two’s complement and return a hexstring of 64 nibbles.\n * @param value - The value to be converted.\n * @param nibbleWidth - The nibble width of the hex string (default is 64).\n *\n * @returns The hex string of the two’s complement.\n *\n * @example\n * ```ts\n * console.log(web3.utils.toTwosComplement(13, 32));\n * > 0x0000000000000000000000000000000d\n *\n * console.log(web3.utils.toTwosComplement('-0x1', 32));\n * > 0xffffffffffffffffffffffffffffffff\n *\n * console.log(web3.utils.toTwosComplement(BigInt('9007199254740992'), 32));\n * > 0x00000000000000000020000000000000\n * ```\n */\nconst toTwosComplement = (value, nibbleWidth = 64) => {\n    web3_validator__WEBPACK_IMPORTED_MODULE_1__.validator.validate(['int'], [value]);\n    const val = (0,_converters_js__WEBPACK_IMPORTED_MODULE_2__.toNumber)(value);\n    if (val >= 0)\n        return padLeft((0,_converters_js__WEBPACK_IMPORTED_MODULE_2__.toHex)(val), nibbleWidth);\n    const largestBit = (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.bigintPower)(BigInt(2), BigInt(nibbleWidth * 4));\n    if (-val >= largestBit) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.NibbleWidthError(`value: ${value}, nibbleWidth: ${nibbleWidth}`);\n    }\n    const updatedVal = BigInt(val);\n    const complement = updatedVal + largestBit;\n    return padLeft((0,_converters_js__WEBPACK_IMPORTED_MODULE_2__.numberToHex)(complement), nibbleWidth);\n};\n/**\n * Converts the twos complement into a decimal number or big int.\n * @param value - The value to be converted.\n * @param nibbleWidth - The nibble width of the hex string (default is 64).\n * @returns The decimal number or big int.\n *\n * @example\n * ```ts\n * console.log(web3.utils.fromTwosComplement('0x0000000000000000000000000000000d', 32'));\n * > 13\n *\n * console.log(web3.utils.fromTwosComplement('0x00000000000000000020000000000000', 32));\n * > 9007199254740992n\n * ```\n */\nconst fromTwosComplement = (value, nibbleWidth = 64) => {\n    web3_validator__WEBPACK_IMPORTED_MODULE_1__.validator.validate(['int'], [value]);\n    const val = (0,_converters_js__WEBPACK_IMPORTED_MODULE_2__.toNumber)(value);\n    if (val < 0)\n        return val;\n    const largestBit = Math.ceil(Math.log(Number(val)) / Math.log(2));\n    if (largestBit > nibbleWidth * 4)\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.NibbleWidthError(`value: \"${value}\", nibbleWidth: \"${nibbleWidth}\"`);\n    // check the largest bit to see if negative\n    if (nibbleWidth * 4 !== largestBit)\n        return val;\n    const complement = (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.bigintPower)(BigInt(2), BigInt(nibbleWidth) * BigInt(4));\n    return (0,_converters_js__WEBPACK_IMPORTED_MODULE_2__.toNumber)(BigInt(val) - complement);\n};\n//# sourceMappingURL=string_manipulation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/web3-utils/lib/esm/string_manipulation.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/web3-utils/lib/esm/uint8array.js":
/*!*******************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/uint8array.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isUint8Array: () => (/* binding */ isUint8Array),\n/* harmony export */   uint8ArrayConcat: () => (/* binding */ uint8ArrayConcat),\n/* harmony export */   uint8ArrayEquals: () => (/* binding */ uint8ArrayEquals)\n/* harmony export */ });\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nfunction isUint8Array(data) {\n    var _a, _b;\n    return (data instanceof Uint8Array ||\n        ((_a = data === null || data === void 0 ? void 0 : data.constructor) === null || _a === void 0 ? void 0 : _a.name) === 'Uint8Array' ||\n        ((_b = data === null || data === void 0 ? void 0 : data.constructor) === null || _b === void 0 ? void 0 : _b.name) === 'Buffer');\n}\nfunction uint8ArrayConcat(...parts) {\n    const length = parts.reduce((prev, part) => {\n        const agg = prev + part.length;\n        return agg;\n    }, 0);\n    const result = new Uint8Array(length);\n    let offset = 0;\n    for (const part of parts) {\n        result.set(part, offset);\n        offset += part.length;\n    }\n    return result;\n}\n/**\n * Returns true if the two passed Uint8Arrays have the same content\n */\nfunction uint8ArrayEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a.byteLength !== b.byteLength) {\n        return false;\n    }\n    for (let i = 0; i < a.byteLength; i += 1) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=uint8array.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL3VpbnQ4YXJyYXkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixrQkFBa0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qdWljZWVsbGlzaC9GdWxsLVN0YWNrLURldmVsb3BtZW50L0Jsb2NrY2hhaW4vUHJvamVjdHMvQ2FtcGFpZ24vbm9kZV9tb2R1bGVzL3dlYjMtdXRpbHMvbGliL2VzbS91aW50OGFycmF5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuZXhwb3J0IGZ1bmN0aW9uIGlzVWludDhBcnJheShkYXRhKSB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICByZXR1cm4gKGRhdGEgaW5zdGFuY2VvZiBVaW50OEFycmF5IHx8XG4gICAgICAgICgoX2EgPSBkYXRhID09PSBudWxsIHx8IGRhdGEgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGRhdGEuY29uc3RydWN0b3IpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5uYW1lKSA9PT0gJ1VpbnQ4QXJyYXknIHx8XG4gICAgICAgICgoX2IgPSBkYXRhID09PSBudWxsIHx8IGRhdGEgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGRhdGEuY29uc3RydWN0b3IpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5uYW1lKSA9PT0gJ0J1ZmZlcicpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHVpbnQ4QXJyYXlDb25jYXQoLi4ucGFydHMpIHtcbiAgICBjb25zdCBsZW5ndGggPSBwYXJ0cy5yZWR1Y2UoKHByZXYsIHBhcnQpID0+IHtcbiAgICAgICAgY29uc3QgYWdnID0gcHJldiArIHBhcnQubGVuZ3RoO1xuICAgICAgICByZXR1cm4gYWdnO1xuICAgIH0sIDApO1xuICAgIGNvbnN0IHJlc3VsdCA9IG5ldyBVaW50OEFycmF5KGxlbmd0aCk7XG4gICAgbGV0IG9mZnNldCA9IDA7XG4gICAgZm9yIChjb25zdCBwYXJ0IG9mIHBhcnRzKSB7XG4gICAgICAgIHJlc3VsdC5zZXQocGFydCwgb2Zmc2V0KTtcbiAgICAgICAgb2Zmc2V0ICs9IHBhcnQubGVuZ3RoO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgdGhlIHR3byBwYXNzZWQgVWludDhBcnJheXMgaGF2ZSB0aGUgc2FtZSBjb250ZW50XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1aW50OEFycmF5RXF1YWxzKGEsIGIpIHtcbiAgICBpZiAoYSA9PT0gYikge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgaWYgKGEuYnl0ZUxlbmd0aCAhPT0gYi5ieXRlTGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhLmJ5dGVMZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICBpZiAoYVtpXSAhPT0gYltpXSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dWludDhhcnJheS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/web3-utils/lib/esm/uint8array.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/web3-utils/lib/esm/uuid.js":
/*!*************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/uuid.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   uuidV4: () => (/* binding */ uuidV4)\n/* harmony export */ });\n/* harmony import */ var _converters_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./converters.js */ \"(rsc)/./node_modules/web3-utils/lib/esm/converters.js\");\n/* harmony import */ var _random_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./random.js */ \"(rsc)/./node_modules/web3-utils/lib/esm/random.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @module Utils\n */\n\n\n/**\n * Generate a version 4 (random) uuid\n * https://github.com/uuidjs/uuid/blob/main/src/v4.js#L5\n * @returns - A version 4 uuid of the form xxxxxxxx-xxxx-4xxx-xxxx-xxxxxxxxxxxx\n * @example\n * ```ts\n * console.log(web3.utils.uuidV4());\n * > \"1b9d6bcd-bbfd-4b2d-9b5d-ab8dfbbd4bed\"\n * ```\n */\nconst uuidV4 = () => {\n    const bytes = (0,_random_js__WEBPACK_IMPORTED_MODULE_1__.randomBytes)(16);\n    // https://github.com/ethers-io/ethers.js/blob/ce8f1e4015c0f27bf178238770b1325136e3351a/packages/json-wallets/src.ts/utils.ts#L54\n    // Section: 4.1.3:\n    // - time_hi_and_version[12:16] = 0b0100\n    /* eslint-disable-next-line */\n    bytes[6] = (bytes[6] & 0x0f) | 0x40;\n    // Section 4.4\n    // - clock_seq_hi_and_reserved[6] = 0b0\n    // - clock_seq_hi_and_reserved[7] = 0b1\n    /* eslint-disable-next-line */\n    bytes[8] = (bytes[8] & 0x3f) | 0x80;\n    const hexString = (0,_converters_js__WEBPACK_IMPORTED_MODULE_0__.bytesToHex)(bytes);\n    return [\n        hexString.substring(2, 10),\n        hexString.substring(10, 14),\n        hexString.substring(14, 18),\n        hexString.substring(18, 22),\n        hexString.substring(22, 34),\n    ].join('-');\n};\n//# sourceMappingURL=uuid.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL3V1aWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUM2QztBQUNIO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxrQkFBa0IsdURBQVc7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsMERBQVU7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvanVpY2VlbGxpc2gvRnVsbC1TdGFjay1EZXZlbG9wbWVudC9CbG9ja2NoYWluL1Byb2plY3RzL0NhbXBhaWduL25vZGVfbW9kdWxlcy93ZWIzLXV0aWxzL2xpYi9lc20vdXVpZC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuVGhpcyBmaWxlIGlzIHBhcnQgb2Ygd2ViMy5qcy5cblxud2ViMy5qcyBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5XG5pdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSBhcyBwdWJsaXNoZWQgYnlcbnRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIGVpdGhlciB2ZXJzaW9uIDMgb2YgdGhlIExpY2Vuc2UsIG9yXG4oYXQgeW91ciBvcHRpb24pIGFueSBsYXRlciB2ZXJzaW9uLlxuXG53ZWIzLmpzIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsXG5idXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZlxuTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZVxuR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuXG5cbllvdSBzaG91bGQgaGF2ZSByZWNlaXZlZCBhIGNvcHkgb2YgdGhlIEdOVSBMZXNzZXIgR2VuZXJhbCBQdWJsaWMgTGljZW5zZVxuYWxvbmcgd2l0aCB3ZWIzLmpzLiAgSWYgbm90LCBzZWUgPGh0dHA6Ly93d3cuZ251Lm9yZy9saWNlbnNlcy8+LlxuKi9cbi8qKlxuICogQG1vZHVsZSBVdGlsc1xuICovXG5pbXBvcnQgeyBieXRlc1RvSGV4IH0gZnJvbSAnLi9jb252ZXJ0ZXJzLmpzJztcbmltcG9ydCB7IHJhbmRvbUJ5dGVzIH0gZnJvbSAnLi9yYW5kb20uanMnO1xuLyoqXG4gKiBHZW5lcmF0ZSBhIHZlcnNpb24gNCAocmFuZG9tKSB1dWlkXG4gKiBodHRwczovL2dpdGh1Yi5jb20vdXVpZGpzL3V1aWQvYmxvYi9tYWluL3NyYy92NC5qcyNMNVxuICogQHJldHVybnMgLSBBIHZlcnNpb24gNCB1dWlkIG9mIHRoZSBmb3JtIHh4eHh4eHh4LXh4eHgtNHh4eC14eHh4LXh4eHh4eHh4eHh4eFxuICogQGV4YW1wbGVcbiAqIGBgYHRzXG4gKiBjb25zb2xlLmxvZyh3ZWIzLnV0aWxzLnV1aWRWNCgpKTtcbiAqID4gXCIxYjlkNmJjZC1iYmZkLTRiMmQtOWI1ZC1hYjhkZmJiZDRiZWRcIlxuICogYGBgXG4gKi9cbmV4cG9ydCBjb25zdCB1dWlkVjQgPSAoKSA9PiB7XG4gICAgY29uc3QgYnl0ZXMgPSByYW5kb21CeXRlcygxNik7XG4gICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2V0aGVycy1pby9ldGhlcnMuanMvYmxvYi9jZThmMWU0MDE1YzBmMjdiZjE3ODIzODc3MGIxMzI1MTM2ZTMzNTFhL3BhY2thZ2VzL2pzb24td2FsbGV0cy9zcmMudHMvdXRpbHMudHMjTDU0XG4gICAgLy8gU2VjdGlvbjogNC4xLjM6XG4gICAgLy8gLSB0aW1lX2hpX2FuZF92ZXJzaW9uWzEyOjE2XSA9IDBiMDEwMFxuICAgIC8qIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSAqL1xuICAgIGJ5dGVzWzZdID0gKGJ5dGVzWzZdICYgMHgwZikgfCAweDQwO1xuICAgIC8vIFNlY3Rpb24gNC40XG4gICAgLy8gLSBjbG9ja19zZXFfaGlfYW5kX3Jlc2VydmVkWzZdID0gMGIwXG4gICAgLy8gLSBjbG9ja19zZXFfaGlfYW5kX3Jlc2VydmVkWzddID0gMGIxXG4gICAgLyogZXNsaW50LWRpc2FibGUtbmV4dC1saW5lICovXG4gICAgYnl0ZXNbOF0gPSAoYnl0ZXNbOF0gJiAweDNmKSB8IDB4ODA7XG4gICAgY29uc3QgaGV4U3RyaW5nID0gYnl0ZXNUb0hleChieXRlcyk7XG4gICAgcmV0dXJuIFtcbiAgICAgICAgaGV4U3RyaW5nLnN1YnN0cmluZygyLCAxMCksXG4gICAgICAgIGhleFN0cmluZy5zdWJzdHJpbmcoMTAsIDE0KSxcbiAgICAgICAgaGV4U3RyaW5nLnN1YnN0cmluZygxNCwgMTgpLFxuICAgICAgICBoZXhTdHJpbmcuc3Vic3RyaW5nKDE4LCAyMiksXG4gICAgICAgIGhleFN0cmluZy5zdWJzdHJpbmcoMjIsIDM0KSxcbiAgICBdLmpvaW4oJy0nKTtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dWlkLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/web3-utils/lib/esm/uuid.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/web3-utils/lib/esm/validation.js":
/*!*******************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/validation.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkAddressCheckSum: () => (/* binding */ checkAddressCheckSum),\n/* harmony export */   compareBlockNumbers: () => (/* binding */ compareBlockNumbers),\n/* harmony export */   isAddress: () => (/* binding */ isAddress),\n/* harmony export */   isBloom: () => (/* binding */ isBloom),\n/* harmony export */   isContractAddressInBloom: () => (/* binding */ isContractAddressInBloom),\n/* harmony export */   isContractInitOptions: () => (/* binding */ isContractInitOptions),\n/* harmony export */   isHex: () => (/* binding */ isHex),\n/* harmony export */   isHexStrict: () => (/* binding */ isHexStrict),\n/* harmony export */   isInBloom: () => (/* binding */ isInBloom),\n/* harmony export */   isNullish: () => (/* binding */ isNullish),\n/* harmony export */   isTopic: () => (/* binding */ isTopic),\n/* harmony export */   isTopicInBloom: () => (/* binding */ isTopicInBloom),\n/* harmony export */   isUserEthereumAddressInBloom: () => (/* binding */ isUserEthereumAddressInBloom)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(rsc)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var web3_validator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! web3-validator */ \"(rsc)/./node_modules/web3-validator/lib/esm/index.js\");\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-types */ \"(rsc)/./node_modules/web3-types/lib/esm/index.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @module Utils\n */\n\n\n\n/**\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nconst isHexStrict = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHexStrict;\n/**\n * returns true if input is a hexstring, number or bigint\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nconst isHex = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isHex;\n/**\n * Checks the checksum of a given address. Will also return false on non-checksum addresses.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nconst checkAddressCheckSum = web3_validator__WEBPACK_IMPORTED_MODULE_1__.checkAddressCheckSum;\n/**\n * Checks if a given string is a valid Ethereum address. It will also check the checksum, if the address has upper and lowercase letters.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nconst isAddress = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isAddress;\n/**\n * Returns true if the bloom is a valid bloom\n * https://github.com/joshstevens19/ethereum-bloom-filters/blob/fbeb47b70b46243c3963fe1c2988d7461ef17236/src/index.ts#L7\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nconst isBloom = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isBloom;\n/**\n * Returns true if the value is part of the given bloom\n * note: false positives are possible.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nconst isInBloom = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isInBloom;\n/**\n * Returns true if the ethereum users address is part of the given bloom note: false positives are possible.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nconst isUserEthereumAddressInBloom = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isUserEthereumAddressInBloom;\n/**\n * Returns true if the contract address is part of the given bloom.\n * note: false positives are possible.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nconst isContractAddressInBloom = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isContractAddressInBloom;\n/**\n * Checks if its a valid topic\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nconst isTopic = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isTopic;\n/**\n * Returns true if the topic is part of the given bloom.\n * note: false positives are possible.\n *\n * @deprecated Will be removed in next release. Please use `web3-validator` package instead.\n */\nconst isTopicInBloom = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isTopicInBloom;\n/**\n * Compares between block A and block B\n * @param blockA - Block number or string\n * @param blockB - Block number or string\n *\n * @returns - Returns -1 if a \\< b, returns 1 if a \\> b and returns 0 if a == b\n *\n * @example\n * ```ts\n * console.log(web3.utils.compareBlockNumbers('latest', 'pending'));\n * > -1\n *\n * console.log(web3.utils.compareBlockNumbers(12, 11));\n * > 1\n * ```\n */\nconst compareBlockNumbers = (blockA, blockB) => {\n    const isABlockTag = typeof blockA === 'string' && (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isBlockTag)(blockA);\n    const isBBlockTag = typeof blockB === 'string' && (0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isBlockTag)(blockB);\n    if (blockA === blockB ||\n        ((blockA === 'earliest' || blockA === 0) && (blockB === 'earliest' || blockB === 0)) // only exception compare blocktag with number\n    ) {\n        return 0;\n    }\n    if (blockA === 'earliest') {\n        return -1;\n    }\n    if (blockB === 'earliest') {\n        return 1;\n    }\n    if (isABlockTag && isBBlockTag) {\n        // Increasing order:  earliest, finalized , safe, latest, pending\n        const tagsOrder = {\n            [web3_types__WEBPACK_IMPORTED_MODULE_2__.BlockTags.EARLIEST]: 1,\n            [web3_types__WEBPACK_IMPORTED_MODULE_2__.BlockTags.FINALIZED]: 2,\n            [web3_types__WEBPACK_IMPORTED_MODULE_2__.BlockTags.SAFE]: 3,\n            [web3_types__WEBPACK_IMPORTED_MODULE_2__.BlockTags.LATEST]: 4,\n            [web3_types__WEBPACK_IMPORTED_MODULE_2__.BlockTags.PENDING]: 5,\n        };\n        if (tagsOrder[blockA] < tagsOrder[blockB]) {\n            return -1;\n        }\n        return 1;\n    }\n    if ((isABlockTag && !isBBlockTag) || (!isABlockTag && isBBlockTag)) {\n        throw new web3_errors__WEBPACK_IMPORTED_MODULE_0__.InvalidBlockError('Cannot compare blocktag with provided non-blocktag input.');\n    }\n    const bigIntA = BigInt(blockA);\n    const bigIntB = BigInt(blockB);\n    if (bigIntA < bigIntB) {\n        return -1;\n    }\n    if (bigIntA === bigIntB) {\n        return 0;\n    }\n    return 1;\n};\nconst isContractInitOptions = (options) => typeof options === 'object' &&\n    !(0,web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish)(options) &&\n    Object.keys(options).length !== 0 &&\n    [\n        'input',\n        'data',\n        'from',\n        'gas',\n        'gasPrice',\n        'gasLimit',\n        'address',\n        'jsonInterface',\n        'syncWithContext',\n        'dataInputFill',\n    ].some(key => key in options);\nconst isNullish = web3_validator__WEBPACK_IMPORTED_MODULE_1__.isNullish;\n//# sourceMappingURL=validation.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/web3-utils/lib/esm/validation.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/web3-utils/lib/esm/web3_deferred_promise.js":
/*!******************************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/web3_deferred_promise.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Web3DeferredPromise: () => (/* binding */ Web3DeferredPromise)\n/* harmony export */ });\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-errors */ \"(rsc)/./node_modules/web3-errors/lib/esm/index.js\");\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar _a;\n\n/**\n * The class is a simple implementation of a deferred promise with optional timeout functionality,\n * which can be useful when dealing with asynchronous tasks.\n *\n */\nclass Web3DeferredPromise {\n    /**\n     *\n     * @param timeout - (optional) The timeout in milliseconds.\n     * @param eagerStart - (optional) If true, the timer starts as soon as the promise is created.\n     * @param timeoutMessage - (optional) The message to include in the timeout erro that is thrown when the promise times out.\n     */\n    constructor({ timeout, eagerStart, timeoutMessage, } = {\n        timeout: 0,\n        eagerStart: false,\n        timeoutMessage: 'DeferredPromise timed out',\n    }) {\n        // public tag to treat object as promise by different libs\n        // eslint-disable-next-line @typescript-eslint/prefer-as-const\n        this[_a] = 'Promise';\n        this._state = 'pending';\n        this._promise = new Promise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n        this._timeoutMessage = timeoutMessage;\n        this._timeoutInterval = timeout;\n        if (eagerStart) {\n            this.startTimer();\n        }\n    }\n    /**\n     * Returns the current state of the promise.\n     * @returns 'pending' | 'fulfilled' | 'rejected'\n     */\n    get state() {\n        return this._state;\n    }\n    /**\n     *\n     * @param onfulfilled - (optional) The callback to execute when the promise is fulfilled.\n     * @param onrejected  - (optional) The callback to execute when the promise is rejected.\n     * @returns\n     */\n    then(onfulfilled, onrejected) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._promise.then(onfulfilled, onrejected);\n        });\n    }\n    /**\n     *\n     * @param onrejected - (optional) The callback to execute when the promise is rejected.\n     * @returns\n     */\n    catch(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    onrejected) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._promise.catch(onrejected);\n        });\n    }\n    /**\n     *\n     * @param onfinally - (optional) The callback to execute when the promise is settled (fulfilled or rejected).\n     * @returns\n     */\n    finally(onfinally) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._promise.finally(onfinally);\n        });\n    }\n    /**\n     * Resolves the current promise.\n     * @param value - The value to resolve the promise with.\n     */\n    resolve(value) {\n        this._resolve(value);\n        this._state = 'fulfilled';\n        this._clearTimeout();\n    }\n    /**\n     * Rejects the current promise.\n     * @param reason - The reason to reject the promise with.\n     */\n    reject(reason) {\n        this._reject(reason);\n        this._state = 'rejected';\n        this._clearTimeout();\n    }\n    /**\n     * Starts the timeout timer for the promise.\n     */\n    startTimer() {\n        if (this._timeoutInterval && this._timeoutInterval > 0) {\n            this._timeoutId = setTimeout(this._checkTimeout.bind(this), this._timeoutInterval);\n        }\n    }\n    _checkTimeout() {\n        if (this._state === 'pending' && this._timeoutId) {\n            this.reject(new web3_errors__WEBPACK_IMPORTED_MODULE_0__.OperationTimeoutError(this._timeoutMessage));\n        }\n    }\n    _clearTimeout() {\n        if (this._timeoutId) {\n            clearTimeout(this._timeoutId);\n        }\n    }\n}\n_a = Symbol.toStringTag;\n//# sourceMappingURL=web3_deferred_promise.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/web3-utils/lib/esm/web3_deferred_promise.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/web3-utils/lib/esm/web3_eip1193_provider.js":
/*!******************************************************************!*\
  !*** ./node_modules/web3-utils/lib/esm/web3_eip1193_provider.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Eip1193Provider: () => (/* binding */ Eip1193Provider)\n/* harmony export */ });\n/* harmony import */ var web3_types__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! web3-types */ \"(rsc)/./node_modules/web3-types/lib/esm/index.js\");\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! eventemitter3 */ \"(rsc)/./node_modules/eventemitter3/index.mjs\");\n/* harmony import */ var web3_errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3-errors */ \"(rsc)/./node_modules/web3-errors/lib/esm/index.js\");\n/* harmony import */ var _json_rpc_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./json_rpc.js */ \"(rsc)/./node_modules/web3-utils/lib/esm/json_rpc.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\n\n\n\n/**\n * This is an abstract class, which extends {@link Web3BaseProvider} class. This class is used to implement a provider that adheres to the EIP-1193 standard for Ethereum providers.\n */\nclass Eip1193Provider extends web3_types__WEBPACK_IMPORTED_MODULE_0__.Web3BaseProvider {\n    constructor() {\n        super(...arguments);\n        this._eventEmitter = new eventemitter3__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();\n        this._chainId = '';\n        this._accounts = [];\n    }\n    _getChainId() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const data = yield this.request((0,_json_rpc_js__WEBPACK_IMPORTED_MODULE_3__.toPayload)({\n                method: 'eth_chainId',\n                params: [],\n            }));\n            return (_a = data === null || data === void 0 ? void 0 : data.result) !== null && _a !== void 0 ? _a : '';\n        });\n    }\n    _getAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const data = yield this.request((0,_json_rpc_js__WEBPACK_IMPORTED_MODULE_3__.toPayload)({\n                method: 'eth_accounts',\n                params: [],\n            }));\n            return (_a = data === null || data === void 0 ? void 0 : data.result) !== null && _a !== void 0 ? _a : [];\n        });\n    }\n    _onConnect() {\n        Promise.all([\n            this._getChainId()\n                .then(chainId => {\n                if (chainId !== this._chainId) {\n                    this._chainId = chainId;\n                    this._eventEmitter.emit('chainChanged', this._chainId);\n                }\n            })\n                .catch(err => {\n                // todo: add error handler\n                console.error(err);\n            }),\n            this._getAccounts()\n                .then(accounts => {\n                if (!(this._accounts.length === accounts.length &&\n                    accounts.every(v => accounts.includes(v)))) {\n                    this._accounts = accounts;\n                    this._onAccountsChanged();\n                }\n            })\n                .catch(err => {\n                // todo: add error handler\n                // eslint-disable-next-line no-console\n                console.error(err);\n            }),\n        ])\n            .then(() => this._eventEmitter.emit('connect', {\n            chainId: this._chainId,\n        }))\n            .catch(err => {\n            // todo: add error handler\n            // eslint-disable-next-line no-console\n            console.error(err);\n        });\n    }\n    // todo this must be ProvideRpcError with a message too\n    _onDisconnect(code, data) {\n        this._eventEmitter.emit('disconnect', new web3_errors__WEBPACK_IMPORTED_MODULE_2__.EIP1193ProviderRpcError(code, data));\n    }\n    _onAccountsChanged() {\n        // get chainId and safe to local\n        this._eventEmitter.emit('accountsChanged', this._accounts);\n    }\n}\n//# sourceMappingURL=web3_eip1193_provider.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL3dlYjNfZWlwMTE5M19wcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLGlCQUFpQixTQUFJLElBQUksU0FBSTtBQUM3Qiw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDK0M7QUFDRjtBQUNTO0FBQ1o7QUFDMUM7QUFDQSw2Q0FBNkMsd0JBQXdCO0FBQ3JFO0FBQ08sOEJBQThCLHdEQUFnQjtBQUNyRDtBQUNBO0FBQ0EsaUNBQWlDLHVEQUFZO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0Qyx1REFBUztBQUNyRDtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLHVEQUFTO0FBQ3JEO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0Esa0RBQWtELGdFQUF1QjtBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2p1aWNlZWxsaXNoL0Z1bGwtU3RhY2stRGV2ZWxvcG1lbnQvQmxvY2tjaGFpbi9Qcm9qZWN0cy9DYW1wYWlnbi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9saWIvZXNtL3dlYjNfZWlwMTE5M19wcm92aWRlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbi8qXG5UaGlzIGZpbGUgaXMgcGFydCBvZiB3ZWIzLmpzLlxuXG53ZWIzLmpzIGlzIGZyZWUgc29mdHdhcmU6IHlvdSBjYW4gcmVkaXN0cmlidXRlIGl0IGFuZC9vciBtb2RpZnlcbml0IHVuZGVyIHRoZSB0ZXJtcyBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieVxudGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3JcbihhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uXG5cbndlYjMuanMgaXMgZGlzdHJpYnV0ZWQgaW4gdGhlIGhvcGUgdGhhdCBpdCB3aWxsIGJlIHVzZWZ1bCxcbmJ1dCBXSVRIT1VUIEFOWSBXQVJSQU5UWTsgd2l0aG91dCBldmVuIHRoZSBpbXBsaWVkIHdhcnJhbnR5IG9mXG5NRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuICBTZWUgdGhlXG5HTlUgTGVzc2VyIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy5cblxuWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIExlc3NlciBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlXG5hbG9uZyB3aXRoIHdlYjMuanMuICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uXG4qL1xuaW1wb3J0IHsgV2ViM0Jhc2VQcm92aWRlciwgfSBmcm9tICd3ZWIzLXR5cGVzJztcbmltcG9ydCB7IEV2ZW50RW1pdHRlciB9IGZyb20gJ2V2ZW50ZW1pdHRlcjMnO1xuaW1wb3J0IHsgRUlQMTE5M1Byb3ZpZGVyUnBjRXJyb3IgfSBmcm9tICd3ZWIzLWVycm9ycyc7XG5pbXBvcnQgeyB0b1BheWxvYWQgfSBmcm9tICcuL2pzb25fcnBjLmpzJztcbi8qKlxuICogVGhpcyBpcyBhbiBhYnN0cmFjdCBjbGFzcywgd2hpY2ggZXh0ZW5kcyB7QGxpbmsgV2ViM0Jhc2VQcm92aWRlcn0gY2xhc3MuIFRoaXMgY2xhc3MgaXMgdXNlZCB0byBpbXBsZW1lbnQgYSBwcm92aWRlciB0aGF0IGFkaGVyZXMgdG8gdGhlIEVJUC0xMTkzIHN0YW5kYXJkIGZvciBFdGhlcmV1bSBwcm92aWRlcnMuXG4gKi9cbmV4cG9ydCBjbGFzcyBFaXAxMTkzUHJvdmlkZXIgZXh0ZW5kcyBXZWIzQmFzZVByb3ZpZGVyIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5fZXZlbnRFbWl0dGVyID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICAgICAgICB0aGlzLl9jaGFpbklkID0gJyc7XG4gICAgICAgIHRoaXMuX2FjY291bnRzID0gW107XG4gICAgfVxuICAgIF9nZXRDaGFpbklkKCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgY29uc3QgZGF0YSA9IHlpZWxkIHRoaXMucmVxdWVzdCh0b1BheWxvYWQoe1xuICAgICAgICAgICAgICAgIG1ldGhvZDogJ2V0aF9jaGFpbklkJyxcbiAgICAgICAgICAgICAgICBwYXJhbXM6IFtdLFxuICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgcmV0dXJuIChfYSA9IGRhdGEgPT09IG51bGwgfHwgZGF0YSA9PT0gdm9pZCAwID8gdm9pZCAwIDogZGF0YS5yZXN1bHQpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6ICcnO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgX2dldEFjY291bnRzKCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgY29uc3QgZGF0YSA9IHlpZWxkIHRoaXMucmVxdWVzdCh0b1BheWxvYWQoe1xuICAgICAgICAgICAgICAgIG1ldGhvZDogJ2V0aF9hY2NvdW50cycsXG4gICAgICAgICAgICAgICAgcGFyYW1zOiBbXSxcbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgIHJldHVybiAoX2EgPSBkYXRhID09PSBudWxsIHx8IGRhdGEgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGRhdGEucmVzdWx0KSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBbXTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIF9vbkNvbm5lY3QoKSB7XG4gICAgICAgIFByb21pc2UuYWxsKFtcbiAgICAgICAgICAgIHRoaXMuX2dldENoYWluSWQoKVxuICAgICAgICAgICAgICAgIC50aGVuKGNoYWluSWQgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChjaGFpbklkICE9PSB0aGlzLl9jaGFpbklkKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2NoYWluSWQgPSBjaGFpbklkO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9ldmVudEVtaXR0ZXIuZW1pdCgnY2hhaW5DaGFuZ2VkJywgdGhpcy5fY2hhaW5JZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAuY2F0Y2goZXJyID0+IHtcbiAgICAgICAgICAgICAgICAvLyB0b2RvOiBhZGQgZXJyb3IgaGFuZGxlclxuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKTtcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgdGhpcy5fZ2V0QWNjb3VudHMoKVxuICAgICAgICAgICAgICAgIC50aGVuKGFjY291bnRzID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoISh0aGlzLl9hY2NvdW50cy5sZW5ndGggPT09IGFjY291bnRzLmxlbmd0aCAmJlxuICAgICAgICAgICAgICAgICAgICBhY2NvdW50cy5ldmVyeSh2ID0+IGFjY291bnRzLmluY2x1ZGVzKHYpKSkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fYWNjb3VudHMgPSBhY2NvdW50cztcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fb25BY2NvdW50c0NoYW5nZWQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC5jYXRjaChlcnIgPT4ge1xuICAgICAgICAgICAgICAgIC8vIHRvZG86IGFkZCBlcnJvciBoYW5kbGVyXG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnNvbGVcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycik7XG4gICAgICAgICAgICB9KSxcbiAgICAgICAgXSlcbiAgICAgICAgICAgIC50aGVuKCgpID0+IHRoaXMuX2V2ZW50RW1pdHRlci5lbWl0KCdjb25uZWN0Jywge1xuICAgICAgICAgICAgY2hhaW5JZDogdGhpcy5fY2hhaW5JZCxcbiAgICAgICAgfSkpXG4gICAgICAgICAgICAuY2F0Y2goZXJyID0+IHtcbiAgICAgICAgICAgIC8vIHRvZG86IGFkZCBlcnJvciBoYW5kbGVyXG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc29sZVxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLy8gdG9kbyB0aGlzIG11c3QgYmUgUHJvdmlkZVJwY0Vycm9yIHdpdGggYSBtZXNzYWdlIHRvb1xuICAgIF9vbkRpc2Nvbm5lY3QoY29kZSwgZGF0YSkge1xuICAgICAgICB0aGlzLl9ldmVudEVtaXR0ZXIuZW1pdCgnZGlzY29ubmVjdCcsIG5ldyBFSVAxMTkzUHJvdmlkZXJScGNFcnJvcihjb2RlLCBkYXRhKSk7XG4gICAgfVxuICAgIF9vbkFjY291bnRzQ2hhbmdlZCgpIHtcbiAgICAgICAgLy8gZ2V0IGNoYWluSWQgYW5kIHNhZmUgdG8gbG9jYWxcbiAgICAgICAgdGhpcy5fZXZlbnRFbWl0dGVyLmVtaXQoJ2FjY291bnRzQ2hhbmdlZCcsIHRoaXMuX2FjY291bnRzKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD13ZWIzX2VpcDExOTNfcHJvdmlkZXIuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/web3-utils/lib/esm/web3_eip1193_provider.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/web3-utils/node_modules/@noble/hashes/esm/_assert.js":
/*!***************************************************************************!*\
  !*** ./node_modules/web3-utils/node_modules/@noble/hashes/esm/_assert.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bool: () => (/* binding */ bool),\n/* harmony export */   bytes: () => (/* binding */ bytes),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   exists: () => (/* binding */ exists),\n/* harmony export */   hash: () => (/* binding */ hash),\n/* harmony export */   isBytes: () => (/* binding */ isBytes),\n/* harmony export */   number: () => (/* binding */ number),\n/* harmony export */   output: () => (/* binding */ output)\n/* harmony export */ });\nfunction number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`positive integer expected, not ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`boolean expected, not ${b}`);\n}\n// copied from utils\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(h.outputLen);\n    number(h.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\n\nconst assert = { number, bool, bytes, hash, exists, output };\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (assert);\n//# sourceMappingURL=_assert.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9lc20vX2Fzc2VydC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQSwwREFBMEQsRUFBRTtBQUM1RDtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsRUFBRTtBQUNuRDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RCxRQUFRLGtCQUFrQixTQUFTO0FBQzVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRkFBaUYsSUFBSTtBQUNyRjtBQUNBO0FBQ3FEO0FBQ3JELGlCQUFpQjtBQUNqQixpRUFBZSxNQUFNLEVBQUM7QUFDdEIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qdWljZWVsbGlzaC9GdWxsLVN0YWNrLURldmVsb3BtZW50L0Jsb2NrY2hhaW4vUHJvamVjdHMvQ2FtcGFpZ24vbm9kZV9tb2R1bGVzL3dlYjMtdXRpbHMvbm9kZV9tb2R1bGVzL0Bub2JsZS9oYXNoZXMvZXNtL19hc3NlcnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gbnVtYmVyKG4pIHtcbiAgICBpZiAoIU51bWJlci5pc1NhZmVJbnRlZ2VyKG4pIHx8IG4gPCAwKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYHBvc2l0aXZlIGludGVnZXIgZXhwZWN0ZWQsIG5vdCAke259YCk7XG59XG5mdW5jdGlvbiBib29sKGIpIHtcbiAgICBpZiAodHlwZW9mIGIgIT09ICdib29sZWFuJylcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBib29sZWFuIGV4cGVjdGVkLCBub3QgJHtifWApO1xufVxuLy8gY29waWVkIGZyb20gdXRpbHNcbmV4cG9ydCBmdW5jdGlvbiBpc0J5dGVzKGEpIHtcbiAgICByZXR1cm4gKGEgaW5zdGFuY2VvZiBVaW50OEFycmF5IHx8XG4gICAgICAgIChhICE9IG51bGwgJiYgdHlwZW9mIGEgPT09ICdvYmplY3QnICYmIGEuY29uc3RydWN0b3IubmFtZSA9PT0gJ1VpbnQ4QXJyYXknKSk7XG59XG5mdW5jdGlvbiBieXRlcyhiLCAuLi5sZW5ndGhzKSB7XG4gICAgaWYgKCFpc0J5dGVzKGIpKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1VpbnQ4QXJyYXkgZXhwZWN0ZWQnKTtcbiAgICBpZiAobGVuZ3Rocy5sZW5ndGggPiAwICYmICFsZW5ndGhzLmluY2x1ZGVzKGIubGVuZ3RoKSlcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVaW50OEFycmF5IGV4cGVjdGVkIG9mIGxlbmd0aCAke2xlbmd0aHN9LCBub3Qgb2YgbGVuZ3RoPSR7Yi5sZW5ndGh9YCk7XG59XG5mdW5jdGlvbiBoYXNoKGgpIHtcbiAgICBpZiAodHlwZW9mIGggIT09ICdmdW5jdGlvbicgfHwgdHlwZW9mIGguY3JlYXRlICE9PSAnZnVuY3Rpb24nKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0hhc2ggc2hvdWxkIGJlIHdyYXBwZWQgYnkgdXRpbHMud3JhcENvbnN0cnVjdG9yJyk7XG4gICAgbnVtYmVyKGgub3V0cHV0TGVuKTtcbiAgICBudW1iZXIoaC5ibG9ja0xlbik7XG59XG5mdW5jdGlvbiBleGlzdHMoaW5zdGFuY2UsIGNoZWNrRmluaXNoZWQgPSB0cnVlKSB7XG4gICAgaWYgKGluc3RhbmNlLmRlc3Ryb3llZClcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdIYXNoIGluc3RhbmNlIGhhcyBiZWVuIGRlc3Ryb3llZCcpO1xuICAgIGlmIChjaGVja0ZpbmlzaGVkICYmIGluc3RhbmNlLmZpbmlzaGVkKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0hhc2gjZGlnZXN0KCkgaGFzIGFscmVhZHkgYmVlbiBjYWxsZWQnKTtcbn1cbmZ1bmN0aW9uIG91dHB1dChvdXQsIGluc3RhbmNlKSB7XG4gICAgYnl0ZXMob3V0KTtcbiAgICBjb25zdCBtaW4gPSBpbnN0YW5jZS5vdXRwdXRMZW47XG4gICAgaWYgKG91dC5sZW5ndGggPCBtaW4pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBkaWdlc3RJbnRvKCkgZXhwZWN0cyBvdXRwdXQgYnVmZmVyIG9mIGxlbmd0aCBhdCBsZWFzdCAke21pbn1gKTtcbiAgICB9XG59XG5leHBvcnQgeyBudW1iZXIsIGJvb2wsIGJ5dGVzLCBoYXNoLCBleGlzdHMsIG91dHB1dCB9O1xuY29uc3QgYXNzZXJ0ID0geyBudW1iZXIsIGJvb2wsIGJ5dGVzLCBoYXNoLCBleGlzdHMsIG91dHB1dCB9O1xuZXhwb3J0IGRlZmF1bHQgYXNzZXJ0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9X2Fzc2VydC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/web3-utils/node_modules/@noble/hashes/esm/_assert.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/web3-utils/node_modules/@noble/hashes/esm/_u64.js":
/*!************************************************************************!*\
  !*** ./node_modules/web3-utils/node_modules/@noble/hashes/esm/_u64.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   add: () => (/* binding */ add),\n/* harmony export */   add3H: () => (/* binding */ add3H),\n/* harmony export */   add3L: () => (/* binding */ add3L),\n/* harmony export */   add4H: () => (/* binding */ add4H),\n/* harmony export */   add4L: () => (/* binding */ add4L),\n/* harmony export */   add5H: () => (/* binding */ add5H),\n/* harmony export */   add5L: () => (/* binding */ add5L),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   fromBig: () => (/* binding */ fromBig),\n/* harmony export */   rotlBH: () => (/* binding */ rotlBH),\n/* harmony export */   rotlBL: () => (/* binding */ rotlBL),\n/* harmony export */   rotlSH: () => (/* binding */ rotlSH),\n/* harmony export */   rotlSL: () => (/* binding */ rotlSL),\n/* harmony export */   rotr32H: () => (/* binding */ rotr32H),\n/* harmony export */   rotr32L: () => (/* binding */ rotr32L),\n/* harmony export */   rotrBH: () => (/* binding */ rotrBH),\n/* harmony export */   rotrBL: () => (/* binding */ rotrBL),\n/* harmony export */   rotrSH: () => (/* binding */ rotrSH),\n/* harmony export */   rotrSL: () => (/* binding */ rotrSL),\n/* harmony export */   shrSH: () => (/* binding */ shrSH),\n/* harmony export */   shrSL: () => (/* binding */ shrSL),\n/* harmony export */   split: () => (/* binding */ split),\n/* harmony export */   toBig: () => (/* binding */ toBig)\n/* harmony export */ });\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\n\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (u64);\n//# sourceMappingURL=_u64.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9lc20vX3U2NC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGdCQUFnQjtBQUNwQyxnQkFBZ0IsT0FBTztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2lMO0FBQ2pMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFlLEdBQUcsRUFBQztBQUNuQiIsInNvdXJjZXMiOlsiL1VzZXJzL2p1aWNlZWxsaXNoL0Z1bGwtU3RhY2stRGV2ZWxvcG1lbnQvQmxvY2tjaGFpbi9Qcm9qZWN0cy9DYW1wYWlnbi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9lc20vX3U2NC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBVMzJfTUFTSzY0ID0gLyogQF9fUFVSRV9fICovIEJpZ0ludCgyICoqIDMyIC0gMSk7XG5jb25zdCBfMzJuID0gLyogQF9fUFVSRV9fICovIEJpZ0ludCgzMik7XG4vLyBXZSBhcmUgbm90IHVzaW5nIEJpZ1VpbnQ2NEFycmF5LCBiZWNhdXNlIHRoZXkgYXJlIGV4dHJlbWVseSBzbG93IGFzIHBlciAyMDIyXG5mdW5jdGlvbiBmcm9tQmlnKG4sIGxlID0gZmFsc2UpIHtcbiAgICBpZiAobGUpXG4gICAgICAgIHJldHVybiB7IGg6IE51bWJlcihuICYgVTMyX01BU0s2NCksIGw6IE51bWJlcigobiA+PiBfMzJuKSAmIFUzMl9NQVNLNjQpIH07XG4gICAgcmV0dXJuIHsgaDogTnVtYmVyKChuID4+IF8zMm4pICYgVTMyX01BU0s2NCkgfCAwLCBsOiBOdW1iZXIobiAmIFUzMl9NQVNLNjQpIHwgMCB9O1xufVxuZnVuY3Rpb24gc3BsaXQobHN0LCBsZSA9IGZhbHNlKSB7XG4gICAgbGV0IEFoID0gbmV3IFVpbnQzMkFycmF5KGxzdC5sZW5ndGgpO1xuICAgIGxldCBBbCA9IG5ldyBVaW50MzJBcnJheShsc3QubGVuZ3RoKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxzdC5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCB7IGgsIGwgfSA9IGZyb21CaWcobHN0W2ldLCBsZSk7XG4gICAgICAgIFtBaFtpXSwgQWxbaV1dID0gW2gsIGxdO1xuICAgIH1cbiAgICByZXR1cm4gW0FoLCBBbF07XG59XG5jb25zdCB0b0JpZyA9IChoLCBsKSA9PiAoQmlnSW50KGggPj4+IDApIDw8IF8zMm4pIHwgQmlnSW50KGwgPj4+IDApO1xuLy8gZm9yIFNoaWZ0IGluIFswLCAzMilcbmNvbnN0IHNoclNIID0gKGgsIF9sLCBzKSA9PiBoID4+PiBzO1xuY29uc3Qgc2hyU0wgPSAoaCwgbCwgcykgPT4gKGggPDwgKDMyIC0gcykpIHwgKGwgPj4+IHMpO1xuLy8gUmlnaHQgcm90YXRlIGZvciBTaGlmdCBpbiBbMSwgMzIpXG5jb25zdCByb3RyU0ggPSAoaCwgbCwgcykgPT4gKGggPj4+IHMpIHwgKGwgPDwgKDMyIC0gcykpO1xuY29uc3Qgcm90clNMID0gKGgsIGwsIHMpID0+IChoIDw8ICgzMiAtIHMpKSB8IChsID4+PiBzKTtcbi8vIFJpZ2h0IHJvdGF0ZSBmb3IgU2hpZnQgaW4gKDMyLCA2NCksIE5PVEU6IDMyIGlzIHNwZWNpYWwgY2FzZS5cbmNvbnN0IHJvdHJCSCA9IChoLCBsLCBzKSA9PiAoaCA8PCAoNjQgLSBzKSkgfCAobCA+Pj4gKHMgLSAzMikpO1xuY29uc3Qgcm90ckJMID0gKGgsIGwsIHMpID0+IChoID4+PiAocyAtIDMyKSkgfCAobCA8PCAoNjQgLSBzKSk7XG4vLyBSaWdodCByb3RhdGUgZm9yIHNoaWZ0PT09MzIgKGp1c3Qgc3dhcHMgbCZoKVxuY29uc3Qgcm90cjMySCA9IChfaCwgbCkgPT4gbDtcbmNvbnN0IHJvdHIzMkwgPSAoaCwgX2wpID0+IGg7XG4vLyBMZWZ0IHJvdGF0ZSBmb3IgU2hpZnQgaW4gWzEsIDMyKVxuY29uc3Qgcm90bFNIID0gKGgsIGwsIHMpID0+IChoIDw8IHMpIHwgKGwgPj4+ICgzMiAtIHMpKTtcbmNvbnN0IHJvdGxTTCA9IChoLCBsLCBzKSA9PiAobCA8PCBzKSB8IChoID4+PiAoMzIgLSBzKSk7XG4vLyBMZWZ0IHJvdGF0ZSBmb3IgU2hpZnQgaW4gKDMyLCA2NCksIE5PVEU6IDMyIGlzIHNwZWNpYWwgY2FzZS5cbmNvbnN0IHJvdGxCSCA9IChoLCBsLCBzKSA9PiAobCA8PCAocyAtIDMyKSkgfCAoaCA+Pj4gKDY0IC0gcykpO1xuY29uc3Qgcm90bEJMID0gKGgsIGwsIHMpID0+IChoIDw8IChzIC0gMzIpKSB8IChsID4+PiAoNjQgLSBzKSk7XG4vLyBKUyB1c2VzIDMyLWJpdCBzaWduZWQgaW50ZWdlcnMgZm9yIGJpdHdpc2Ugb3BlcmF0aW9ucyB3aGljaCBtZWFucyB3ZSBjYW5ub3Rcbi8vIHNpbXBsZSB0YWtlIGNhcnJ5IG91dCBvZiBsb3cgYml0IHN1bSBieSBzaGlmdCwgd2UgbmVlZCB0byB1c2UgZGl2aXNpb24uXG5mdW5jdGlvbiBhZGQoQWgsIEFsLCBCaCwgQmwpIHtcbiAgICBjb25zdCBsID0gKEFsID4+PiAwKSArIChCbCA+Pj4gMCk7XG4gICAgcmV0dXJuIHsgaDogKEFoICsgQmggKyAoKGwgLyAyICoqIDMyKSB8IDApKSB8IDAsIGw6IGwgfCAwIH07XG59XG4vLyBBZGRpdGlvbiB3aXRoIG1vcmUgdGhhbiAyIGVsZW1lbnRzXG5jb25zdCBhZGQzTCA9IChBbCwgQmwsIENsKSA9PiAoQWwgPj4+IDApICsgKEJsID4+PiAwKSArIChDbCA+Pj4gMCk7XG5jb25zdCBhZGQzSCA9IChsb3csIEFoLCBCaCwgQ2gpID0+IChBaCArIEJoICsgQ2ggKyAoKGxvdyAvIDIgKiogMzIpIHwgMCkpIHwgMDtcbmNvbnN0IGFkZDRMID0gKEFsLCBCbCwgQ2wsIERsKSA9PiAoQWwgPj4+IDApICsgKEJsID4+PiAwKSArIChDbCA+Pj4gMCkgKyAoRGwgPj4+IDApO1xuY29uc3QgYWRkNEggPSAobG93LCBBaCwgQmgsIENoLCBEaCkgPT4gKEFoICsgQmggKyBDaCArIERoICsgKChsb3cgLyAyICoqIDMyKSB8IDApKSB8IDA7XG5jb25zdCBhZGQ1TCA9IChBbCwgQmwsIENsLCBEbCwgRWwpID0+IChBbCA+Pj4gMCkgKyAoQmwgPj4+IDApICsgKENsID4+PiAwKSArIChEbCA+Pj4gMCkgKyAoRWwgPj4+IDApO1xuY29uc3QgYWRkNUggPSAobG93LCBBaCwgQmgsIENoLCBEaCwgRWgpID0+IChBaCArIEJoICsgQ2ggKyBEaCArIEVoICsgKChsb3cgLyAyICoqIDMyKSB8IDApKSB8IDA7XG4vLyBwcmV0dGllci1pZ25vcmVcbmV4cG9ydCB7IGZyb21CaWcsIHNwbGl0LCB0b0JpZywgc2hyU0gsIHNoclNMLCByb3RyU0gsIHJvdHJTTCwgcm90ckJILCByb3RyQkwsIHJvdHIzMkgsIHJvdHIzMkwsIHJvdGxTSCwgcm90bFNMLCByb3RsQkgsIHJvdGxCTCwgYWRkLCBhZGQzTCwgYWRkM0gsIGFkZDRMLCBhZGQ0SCwgYWRkNUgsIGFkZDVMLCB9O1xuLy8gcHJldHRpZXItaWdub3JlXG5jb25zdCB1NjQgPSB7XG4gICAgZnJvbUJpZywgc3BsaXQsIHRvQmlnLFxuICAgIHNoclNILCBzaHJTTCxcbiAgICByb3RyU0gsIHJvdHJTTCwgcm90ckJILCByb3RyQkwsXG4gICAgcm90cjMySCwgcm90cjMyTCxcbiAgICByb3RsU0gsIHJvdGxTTCwgcm90bEJILCByb3RsQkwsXG4gICAgYWRkLCBhZGQzTCwgYWRkM0gsIGFkZDRMLCBhZGQ0SCwgYWRkNUgsIGFkZDVMLFxufTtcbmV4cG9ydCBkZWZhdWx0IHU2NDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPV91NjQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/web3-utils/node_modules/@noble/hashes/esm/_u64.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/web3-utils/node_modules/@noble/hashes/esm/cryptoNode.js":
/*!******************************************************************************!*\
  !*** ./node_modules/web3-utils/node_modules/@noble/hashes/esm/cryptoNode.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("var node_crypto__WEBPACK_IMPORTED_MODULE_0___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   crypto: () => (/* binding */ crypto)\n/* harmony export */ });\n/* harmony import */ var node_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:crypto */ \"node:crypto\");\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// See utils.ts for details.\n// The file will throw on node.js 14 and earlier.\n// @ts-ignore\n\nconst crypto = /*#__PURE__*/ (node_crypto__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (node_crypto__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(node_crypto__WEBPACK_IMPORTED_MODULE_0__, 2))) && typeof /*#__PURE__*/ (node_crypto__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (node_crypto__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(node_crypto__WEBPACK_IMPORTED_MODULE_0__, 2))) === 'object' && \"webcrypto\" in /*#__PURE__*/ (node_crypto__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (node_crypto__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(node_crypto__WEBPACK_IMPORTED_MODULE_0__, 2))) ? node_crypto__WEBPACK_IMPORTED_MODULE_0__.webcrypto : undefined;\n//# sourceMappingURL=cryptoNode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9ub2RlX21vZHVsZXMvQG5vYmxlL2hhc2hlcy9lc20vY3J5cHRvTm9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNrQztBQUMzQixlQUFlLDJNQUFFLFdBQVcsMk1BQUUsaUJBQWlCLDBOQUFpQixHQUFHLGtEQUFZO0FBQ3RGIiwic291cmNlcyI6WyIvVXNlcnMvanVpY2VlbGxpc2gvRnVsbC1TdGFjay1EZXZlbG9wbWVudC9CbG9ja2NoYWluL1Byb2plY3RzL0NhbXBhaWduL25vZGVfbW9kdWxlcy93ZWIzLXV0aWxzL25vZGVfbW9kdWxlcy9Abm9ibGUvaGFzaGVzL2VzbS9jcnlwdG9Ob2RlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFdlIHVzZSBXZWJDcnlwdG8gYWthIGdsb2JhbFRoaXMuY3J5cHRvLCB3aGljaCBleGlzdHMgaW4gYnJvd3NlcnMgYW5kIG5vZGUuanMgMTYrLlxuLy8gU2VlIHV0aWxzLnRzIGZvciBkZXRhaWxzLlxuLy8gVGhlIGZpbGUgd2lsbCB0aHJvdyBvbiBub2RlLmpzIDE0IGFuZCBlYXJsaWVyLlxuLy8gQHRzLWlnbm9yZVxuaW1wb3J0ICogYXMgbmMgZnJvbSAnbm9kZTpjcnlwdG8nO1xuZXhwb3J0IGNvbnN0IGNyeXB0byA9IG5jICYmIHR5cGVvZiBuYyA9PT0gJ29iamVjdCcgJiYgJ3dlYmNyeXB0bycgaW4gbmMgPyBuYy53ZWJjcnlwdG8gOiB1bmRlZmluZWQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jcnlwdG9Ob2RlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/web3-utils/node_modules/@noble/hashes/esm/cryptoNode.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/web3-utils/node_modules/@noble/hashes/esm/sha3.js":
/*!************************************************************************!*\
  !*** ./node_modules/web3-utils/node_modules/@noble/hashes/esm/sha3.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Keccak: () => (/* binding */ Keccak),\n/* harmony export */   keccakP: () => (/* binding */ keccakP),\n/* harmony export */   keccak_224: () => (/* binding */ keccak_224),\n/* harmony export */   keccak_256: () => (/* binding */ keccak_256),\n/* harmony export */   keccak_384: () => (/* binding */ keccak_384),\n/* harmony export */   keccak_512: () => (/* binding */ keccak_512),\n/* harmony export */   sha3_224: () => (/* binding */ sha3_224),\n/* harmony export */   sha3_256: () => (/* binding */ sha3_256),\n/* harmony export */   sha3_384: () => (/* binding */ sha3_384),\n/* harmony export */   sha3_512: () => (/* binding */ sha3_512),\n/* harmony export */   shake128: () => (/* binding */ shake128),\n/* harmony export */   shake256: () => (/* binding */ shake256)\n/* harmony export */ });\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_assert.js */ \"(rsc)/./node_modules/web3-utils/node_modules/@noble/hashes/esm/_assert.js\");\n/* harmony import */ var _u64_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_u64.js */ \"(rsc)/./node_modules/web3-utils/node_modules/@noble/hashes/esm/_u64.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/web3-utils/node_modules/@noble/hashes/esm/utils.js\");\n\n\n\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n// Various per round constants calculations\nconst SHA3_PI = [];\nconst SHA3_ROTL = [];\nconst _SHA3_IOTA = [];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.split)(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.rotlBH)(h, l, s) : (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.rotlSH)(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.rotlBL)(h, l, s) : (0,_u64_js__WEBPACK_IMPORTED_MODULE_0__.rotlSL)(h, l, s));\n// Same as keccakf1600, but allows to skip some rounds\nfunction keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\nclass Keccak extends _utils_js__WEBPACK_IMPORTED_MODULE_1__.Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_2__.number)(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.u32)(this.state);\n    }\n    keccak() {\n        if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__.isLE)\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.byteSwap32)(this.state32);\n        keccakP(this.state32, this.rounds);\n        if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__.isLE)\n            (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.byteSwap32)(this.state32);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_2__.exists)(this);\n        const { blockLen, state } = this;\n        data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_2__.exists)(this, false);\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_2__.bytes)(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_2__.number)(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_2__.output)(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));\nconst sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nconst sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\nconst sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\nconst sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\nconst keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nconst keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\nconst keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\nconst keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.wrapXOFConstructorWithOpts)((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\nconst shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\nconst shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/web3-utils/node_modules/@noble/hashes/esm/sha3.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/web3-utils/node_modules/@noble/hashes/esm/utils.js":
/*!*************************************************************************!*\
  !*** ./node_modules/web3-utils/node_modules/@noble/hashes/esm/utils.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Hash: () => (/* binding */ Hash),\n/* harmony export */   asyncLoop: () => (/* binding */ asyncLoop),\n/* harmony export */   byteSwap: () => (/* binding */ byteSwap),\n/* harmony export */   byteSwap32: () => (/* binding */ byteSwap32),\n/* harmony export */   byteSwapIfBE: () => (/* binding */ byteSwapIfBE),\n/* harmony export */   bytesToHex: () => (/* binding */ bytesToHex),\n/* harmony export */   checkOpts: () => (/* binding */ checkOpts),\n/* harmony export */   concatBytes: () => (/* binding */ concatBytes),\n/* harmony export */   createView: () => (/* binding */ createView),\n/* harmony export */   hexToBytes: () => (/* binding */ hexToBytes),\n/* harmony export */   isBytes: () => (/* binding */ isBytes),\n/* harmony export */   isLE: () => (/* binding */ isLE),\n/* harmony export */   nextTick: () => (/* binding */ nextTick),\n/* harmony export */   randomBytes: () => (/* binding */ randomBytes),\n/* harmony export */   rotl: () => (/* binding */ rotl),\n/* harmony export */   rotr: () => (/* binding */ rotr),\n/* harmony export */   toBytes: () => (/* binding */ toBytes),\n/* harmony export */   u32: () => (/* binding */ u32),\n/* harmony export */   u8: () => (/* binding */ u8),\n/* harmony export */   utf8ToBytes: () => (/* binding */ utf8ToBytes),\n/* harmony export */   wrapConstructor: () => (/* binding */ wrapConstructor),\n/* harmony export */   wrapConstructorWithOpts: () => (/* binding */ wrapConstructorWithOpts),\n/* harmony export */   wrapXOFConstructorWithOpts: () => (/* binding */ wrapXOFConstructorWithOpts)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/crypto */ \"(rsc)/./node_modules/web3-utils/node_modules/@noble/hashes/esm/cryptoNode.js\");\n/* harmony import */ var _assert_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_assert.js */ \"(rsc)/./node_modules/web3-utils/node_modules/@noble/hashes/esm/_assert.js\");\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\n\n\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nfunction isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word, shift) => (word << shift) | ((word >>> (32 - shift)) >>> 0);\nconst isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nconst byteSwap = (word) => ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff);\n// Conditionally byte swap if on a big-endian platform\nconst byteSwapIfBE = isLE ? (n) => n : (n) => byteSwap(n);\n// In place byte swap for Uint32Array\nfunction byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nfunction bytesToHex(bytes) {\n    (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.bytes)(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nconst nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.bytes)(data);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nfunction concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        (0,_assert_js__WEBPACK_IMPORTED_MODULE_0__.bytes)(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nfunction checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nfunction wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nfunction wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nfunction randomBytes(bytesLength = 32) {\n    if (_noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_1__.crypto && typeof _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_1__.crypto.getRandomValues === 'function') {\n        return _noble_hashes_crypto__WEBPACK_IMPORTED_MODULE_1__.crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/web3-utils/node_modules/@noble/hashes/esm/utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/web3-utils/node_modules/ethereum-cryptography/esm/keccak.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/web3-utils/node_modules/ethereum-cryptography/esm/keccak.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   keccak224: () => (/* binding */ keccak224),\n/* harmony export */   keccak256: () => (/* binding */ keccak256),\n/* harmony export */   keccak384: () => (/* binding */ keccak384),\n/* harmony export */   keccak512: () => (/* binding */ keccak512)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/sha3 */ \"(rsc)/./node_modules/web3-utils/node_modules/@noble/hashes/esm/sha3.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(rsc)/./node_modules/web3-utils/node_modules/ethereum-cryptography/esm/utils.js\");\n\n\nconst keccak224 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.wrapHash)(_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_1__.keccak_224);\nconst keccak256 = (() => {\n    const k = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.wrapHash)(_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_1__.keccak_256);\n    k.create = _noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_1__.keccak_256.create;\n    return k;\n})();\nconst keccak384 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.wrapHash)(_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_1__.keccak_384);\nconst keccak512 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.wrapHash)(_noble_hashes_sha3__WEBPACK_IMPORTED_MODULE_1__.keccak_512);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9ub2RlX21vZHVsZXMvZXRoZXJldW0tY3J5cHRvZ3JhcGh5L2VzbS9rZWNjYWsuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQW9GO0FBQzlDO0FBQy9CLGtCQUFrQixtREFBUSxDQUFDLDBEQUFVO0FBQ3JDO0FBQ1AsY0FBYyxtREFBUSxDQUFDLDBEQUFVO0FBQ2pDLGVBQWUsMERBQVU7QUFDekI7QUFDQSxDQUFDO0FBQ00sa0JBQWtCLG1EQUFRLENBQUMsMERBQVU7QUFDckMsa0JBQWtCLG1EQUFRLENBQUMsMERBQVUiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qdWljZWVsbGlzaC9GdWxsLVN0YWNrLURldmVsb3BtZW50L0Jsb2NrY2hhaW4vUHJvamVjdHMvQ2FtcGFpZ24vbm9kZV9tb2R1bGVzL3dlYjMtdXRpbHMvbm9kZV9tb2R1bGVzL2V0aGVyZXVtLWNyeXB0b2dyYXBoeS9lc20va2VjY2FrLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGtlY2Nha18yMjQsIGtlY2Nha18yNTYsIGtlY2Nha18zODQsIGtlY2Nha181MTIgfSBmcm9tIFwiQG5vYmxlL2hhc2hlcy9zaGEzXCI7XG5pbXBvcnQgeyB3cmFwSGFzaCB9IGZyb20gXCIuL3V0aWxzLmpzXCI7XG5leHBvcnQgY29uc3Qga2VjY2FrMjI0ID0gd3JhcEhhc2goa2VjY2FrXzIyNCk7XG5leHBvcnQgY29uc3Qga2VjY2FrMjU2ID0gKCgpID0+IHtcbiAgICBjb25zdCBrID0gd3JhcEhhc2goa2VjY2FrXzI1Nik7XG4gICAgay5jcmVhdGUgPSBrZWNjYWtfMjU2LmNyZWF0ZTtcbiAgICByZXR1cm4gaztcbn0pKCk7XG5leHBvcnQgY29uc3Qga2VjY2FrMzg0ID0gd3JhcEhhc2goa2VjY2FrXzM4NCk7XG5leHBvcnQgY29uc3Qga2VjY2FrNTEyID0gd3JhcEhhc2goa2VjY2FrXzUxMik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/web3-utils/node_modules/ethereum-cryptography/esm/keccak.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/web3-utils/node_modules/ethereum-cryptography/esm/random.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/web3-utils/node_modules/ethereum-cryptography/esm/random.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRandomBytes: () => (/* binding */ getRandomBytes),\n/* harmony export */   getRandomBytesSync: () => (/* binding */ getRandomBytesSync)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/utils */ \"(rsc)/./node_modules/web3-utils/node_modules/@noble/hashes/esm/utils.js\");\n\nfunction getRandomBytesSync(bytes) {\n    return (0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_0__.randomBytes)(bytes);\n}\nasync function getRandomBytes(bytes) {\n    return (0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_0__.randomBytes)(bytes);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9ub2RlX21vZHVsZXMvZXRoZXJldW0tY3J5cHRvZ3JhcGh5L2VzbS9yYW5kb20uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtEO0FBQzNDO0FBQ1AsV0FBVyxnRUFBVztBQUN0QjtBQUNPO0FBQ1AsV0FBVyxnRUFBVztBQUN0QiIsInNvdXJjZXMiOlsiL1VzZXJzL2p1aWNlZWxsaXNoL0Z1bGwtU3RhY2stRGV2ZWxvcG1lbnQvQmxvY2tjaGFpbi9Qcm9qZWN0cy9DYW1wYWlnbi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9ub2RlX21vZHVsZXMvZXRoZXJldW0tY3J5cHRvZ3JhcGh5L2VzbS9yYW5kb20uanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmFuZG9tQnl0ZXMgfSBmcm9tIFwiQG5vYmxlL2hhc2hlcy91dGlsc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIGdldFJhbmRvbUJ5dGVzU3luYyhieXRlcykge1xuICAgIHJldHVybiByYW5kb21CeXRlcyhieXRlcyk7XG59XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0UmFuZG9tQnl0ZXMoYnl0ZXMpIHtcbiAgICByZXR1cm4gcmFuZG9tQnl0ZXMoYnl0ZXMpO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/web3-utils/node_modules/ethereum-cryptography/esm/random.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/web3-utils/node_modules/ethereum-cryptography/esm/utils.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/web3-utils/node_modules/ethereum-cryptography/esm/utils.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertBool: () => (/* binding */ assertBool),\n/* harmony export */   assertBytes: () => (/* binding */ assertBytes),\n/* harmony export */   bytesToHex: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.bytesToHex),\n/* harmony export */   bytesToUtf8: () => (/* binding */ bytesToUtf8),\n/* harmony export */   concatBytes: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.concatBytes),\n/* harmony export */   createView: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.createView),\n/* harmony export */   crypto: () => (/* binding */ crypto),\n/* harmony export */   equalsBytes: () => (/* binding */ equalsBytes),\n/* harmony export */   hexToBytes: () => (/* binding */ hexToBytes),\n/* harmony export */   toHex: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.bytesToHex),\n/* harmony export */   utf8ToBytes: () => (/* reexport safe */ _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.utf8ToBytes),\n/* harmony export */   wrapHash: () => (/* binding */ wrapHash)\n/* harmony export */ });\n/* harmony import */ var _noble_hashes_assert__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @noble/hashes/_assert */ \"(rsc)/./node_modules/web3-utils/node_modules/@noble/hashes/esm/_assert.js\");\n/* harmony import */ var _noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @noble/hashes/utils */ \"(rsc)/./node_modules/web3-utils/node_modules/@noble/hashes/esm/utils.js\");\n\n\nconst assertBool = _noble_hashes_assert__WEBPACK_IMPORTED_MODULE_0__[\"default\"].bool;\nconst assertBytes = _noble_hashes_assert__WEBPACK_IMPORTED_MODULE_0__[\"default\"].bytes;\n\n\n// buf.toString('utf8') -> bytesToUtf8(buf)\nfunction bytesToUtf8(data) {\n    if (!(data instanceof Uint8Array)) {\n        throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof data}`);\n    }\n    return new TextDecoder().decode(data);\n}\nfunction hexToBytes(data) {\n    const sliced = data.startsWith(\"0x\") ? data.substring(2) : data;\n    return (0,_noble_hashes_utils__WEBPACK_IMPORTED_MODULE_1__.hexToBytes)(sliced);\n}\n// buf.equals(buf2) -> equalsBytes(buf, buf2)\nfunction equalsBytes(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n// Internal utils\nfunction wrapHash(hash) {\n    return (msg) => {\n        _noble_hashes_assert__WEBPACK_IMPORTED_MODULE_0__[\"default\"].bytes(msg);\n        return hash(msg);\n    };\n}\n// TODO(v3): switch away from node crypto, remove this unnecessary variable.\nconst crypto = (() => {\n    const webCrypto = typeof globalThis === \"object\" && \"crypto\" in globalThis ? globalThis.crypto : undefined;\n    const nodeRequire = typeof module !== \"undefined\" &&\n        typeof module.require === \"function\" &&\n        module.require.bind(module);\n    return {\n        node: nodeRequire && !webCrypto ? nodeRequire(\"crypto\") : undefined,\n        web: webCrypto\n    };\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvd2ViMy11dGlscy9ub2RlX21vZHVsZXMvZXRoZXJldW0tY3J5cHRvZ3JhcGh5L2VzbS91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUEyQztBQUNxQjtBQUNoRSxtQkFBbUIsaUVBQVc7QUFDOUIsb0JBQW9CLGtFQUFZO0FBQ0c7QUFDeUU7QUFDNUc7QUFDTztBQUNQO0FBQ0Esb0VBQW9FLFlBQVk7QUFDaEY7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLFdBQVcsK0RBQVc7QUFDdEI7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGNBQWM7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsUUFBUSxrRUFBWTtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9qdWljZWVsbGlzaC9GdWxsLVN0YWNrLURldmVsb3BtZW50L0Jsb2NrY2hhaW4vUHJvamVjdHMvQ2FtcGFpZ24vbm9kZV9tb2R1bGVzL3dlYjMtdXRpbHMvbm9kZV9tb2R1bGVzL2V0aGVyZXVtLWNyeXB0b2dyYXBoeS9lc20vdXRpbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGFzc2VydCBmcm9tIFwiQG5vYmxlL2hhc2hlcy9fYXNzZXJ0XCI7XG5pbXBvcnQgeyBoZXhUb0J5dGVzIGFzIF9oZXhUb0J5dGVzIH0gZnJvbSBcIkBub2JsZS9oYXNoZXMvdXRpbHNcIjtcbmNvbnN0IGFzc2VydEJvb2wgPSBhc3NlcnQuYm9vbDtcbmNvbnN0IGFzc2VydEJ5dGVzID0gYXNzZXJ0LmJ5dGVzO1xuZXhwb3J0IHsgYXNzZXJ0Qm9vbCwgYXNzZXJ0Qnl0ZXMgfTtcbmV4cG9ydCB7IGJ5dGVzVG9IZXgsIGJ5dGVzVG9IZXggYXMgdG9IZXgsIGNvbmNhdEJ5dGVzLCBjcmVhdGVWaWV3LCB1dGY4VG9CeXRlcyB9IGZyb20gXCJAbm9ibGUvaGFzaGVzL3V0aWxzXCI7XG4vLyBidWYudG9TdHJpbmcoJ3V0ZjgnKSAtPiBieXRlc1RvVXRmOChidWYpXG5leHBvcnQgZnVuY3Rpb24gYnl0ZXNUb1V0ZjgoZGF0YSkge1xuICAgIGlmICghKGRhdGEgaW5zdGFuY2VvZiBVaW50OEFycmF5KSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGBieXRlc1RvVXRmOCBleHBlY3RlZCBVaW50OEFycmF5LCBnb3QgJHt0eXBlb2YgZGF0YX1gKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBUZXh0RGVjb2RlcigpLmRlY29kZShkYXRhKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBoZXhUb0J5dGVzKGRhdGEpIHtcbiAgICBjb25zdCBzbGljZWQgPSBkYXRhLnN0YXJ0c1dpdGgoXCIweFwiKSA/IGRhdGEuc3Vic3RyaW5nKDIpIDogZGF0YTtcbiAgICByZXR1cm4gX2hleFRvQnl0ZXMoc2xpY2VkKTtcbn1cbi8vIGJ1Zi5lcXVhbHMoYnVmMikgLT4gZXF1YWxzQnl0ZXMoYnVmLCBidWYyKVxuZXhwb3J0IGZ1bmN0aW9uIGVxdWFsc0J5dGVzKGEsIGIpIHtcbiAgICBpZiAoYS5sZW5ndGggIT09IGIubGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChhW2ldICE9PSBiW2ldKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG4vLyBJbnRlcm5hbCB1dGlsc1xuZXhwb3J0IGZ1bmN0aW9uIHdyYXBIYXNoKGhhc2gpIHtcbiAgICByZXR1cm4gKG1zZykgPT4ge1xuICAgICAgICBhc3NlcnQuYnl0ZXMobXNnKTtcbiAgICAgICAgcmV0dXJuIGhhc2gobXNnKTtcbiAgICB9O1xufVxuLy8gVE9ETyh2Myk6IHN3aXRjaCBhd2F5IGZyb20gbm9kZSBjcnlwdG8sIHJlbW92ZSB0aGlzIHVubmVjZXNzYXJ5IHZhcmlhYmxlLlxuZXhwb3J0IGNvbnN0IGNyeXB0byA9ICgoKSA9PiB7XG4gICAgY29uc3Qgd2ViQ3J5cHRvID0gdHlwZW9mIGdsb2JhbFRoaXMgPT09IFwib2JqZWN0XCIgJiYgXCJjcnlwdG9cIiBpbiBnbG9iYWxUaGlzID8gZ2xvYmFsVGhpcy5jcnlwdG8gOiB1bmRlZmluZWQ7XG4gICAgY29uc3Qgbm9kZVJlcXVpcmUgPSB0eXBlb2YgbW9kdWxlICE9PSBcInVuZGVmaW5lZFwiICYmXG4gICAgICAgIHR5cGVvZiBtb2R1bGUucmVxdWlyZSA9PT0gXCJmdW5jdGlvblwiICYmXG4gICAgICAgIG1vZHVsZS5yZXF1aXJlLmJpbmQobW9kdWxlKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBub2RlOiBub2RlUmVxdWlyZSAmJiAhd2ViQ3J5cHRvID8gbm9kZVJlcXVpcmUoXCJjcnlwdG9cIikgOiB1bmRlZmluZWQsXG4gICAgICAgIHdlYjogd2ViQ3J5cHRvXG4gICAgfTtcbn0pKCk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/web3-utils/node_modules/ethereum-cryptography/esm/utils.js\n");

/***/ })

};
;